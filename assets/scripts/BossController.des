# BossController.ts Description

## Purpose
Manages BOSS enemies that appear at the end of major levels, providing challenging encounters that require sustained combat rather than simple brick destruction.

## Key Features

### Health System
- **maxHealth**: Total boss health points (default: 100)
- **takeDamage()**: Reduces health when hit by balls or lasers
- **Visual feedback**: Boss flashes red when taking damage
- **Health tracking**: getCurrentHealth() and getMaxHealth() for UI display

### Movement Behavior  
- **Horizontal movement**: Boss moves left and right across the screen
- **Edge bouncing**: Reverses direction when hitting screen boundaries
- **Configurable speed**: moveSpeed property controls movement rate

### Attack System
- **Periodic attacks**: Boss attacks every attackInterval seconds (default: 5.0)
- **Core damage**: Boss attacks deal damage directly to the player's core
- **Attack damage**: Configurable damage per attack (default: 1)
- **Attack warning**: Console logs provide attack feedback

### Combat Mechanics
- **Ball collision**: Takes damage from ball impacts
- **Laser vulnerability**: Takes increased damage from laser shots (2 damage)
- **Damage calculation**: Supports variable damage from different sources
- **Death condition**: Destroyed when health reaches 0

### Integration Points
- **GameManager integration**: Calls onBossDefeated() when destroyed
- **Score system**: Grants scoreValue points when defeated (default: 500)
- **Core attack system**: Integrates with new core damage mechanics

## How to Use in Cocos Creator

### 1. Create Boss Prefab
```
1. Create new Node in Scene
2. Add Sprite component for visual representation
3. Add RigidBody2D component (Type: STATIC or KINEMATIC)
4. Add BoxCollider2D component for collision detection
5. Attach BossController.ts script to the node
```

### 2. Configure Boss Properties
```
Inspector Settings:
- Max Health: 100-300 (depending on difficulty)
- Attack Damage: 1-2 (core damage per attack)
- Attack Interval: 3.0-7.0 seconds
- Move Speed: 30-100 (horizontal movement speed)
- Score Value: 300-1000 (points awarded on defeat)
```

### 3. Physics Setup
```
Collision Groups:
- Boss should be in "BOSS" group
- Enable collision with "BALL" and "LASER" groups
- Disable collision with "BRICK" and "PADDLE" groups
```

### 4. Visual Requirements
- Boss sprite should be larger than regular bricks
- Distinct visual design to indicate boss status
- Consider animated sprite for enhanced visual appeal
- Health bar UI element recommended for player feedback

### 5. Level Integration
- Place boss in level layouts using LevelManager
- Boss levels should have fewer or no regular bricks
- Consider boss-specific level backgrounds or effects

## Boss Design Considerations

### Difficulty Scaling
- Early bosses: Lower health, slower attacks, predictable movement
- Later bosses: Higher health, faster attacks, complex movement patterns
- Final bosses: Multiple attack types, phases, environmental hazards

### Balance Recommendations
- Boss health should require 50-100 ball hits to defeat
- Attack frequency should pressure but not overwhelm players
- Movement should be predictable enough to allow skillful play
- Score rewards should justify the increased challenge

### Future Enhancements
- Multiple attack patterns (projectiles, area effects, summons)
- Boss phases with changing behavior at different health thresholds
- Special boss abilities that interact with core mechanics
- Unique boss-specific power-ups or rewards