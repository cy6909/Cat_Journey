## Brick.ts 脚本逻辑描述

### 核心功能
Brick管理砖块的健康值、碰撞检测、视觉反馈和销毁逻辑，支持多次碰撞才销毁的砖块类型，并与RelicManager集成实现爆炸效果等特殊功能。

### 主要组件
1. **健康系统**: 基于健康值的砖块耐久度
2. **碰撞处理**: 与球碰撞时的伤害计算
3. **视觉反馈**: 根据健康值变化调整砖块外观
4. **遗物集成**: 支持爆炸砖块等被动效果
5. **分数奖励**: 销毁时提供分数和可能的道具掉落

### 关键属性
```typescript
public health: number = 1           // 砖块健康值
public scoreValue: number = 10      // 销毁时的分数奖励
private _sprite: Sprite             // Sprite组件引用
private _originalColor: Color       // 原始颜色
```

### 关键方法
- `onLoad()`: 初始化组件引用和碰撞监听
- `onBeginContact()`: 处理与球的碰撞事件
- `takeDamage()`: 接受伤害并更新视觉效果
- `updateVisualState()`: 根据健康值更新砖块外观
- `destroy()`: 销毁砖块并触发相关效果

### 健康与视觉系统
- **健康值=1**: 普通砖块，一击销毁
- **健康值>1**: 需要多次碰撞的坚硬砖块
- **视觉反馈**: 健康值降低时砖块变暗或改变颜色

### 遗物系统集成
- **爆炸砖块**: 当RelicManager拥有此遗物时，砖块销毁会对周围砖块造成伤害
- **连锁反应**: 支持遗物触发的连锁销毁效果

### Cocos Creator绑定说明

#### 1. 预制体创建
- 创建新节点，命名为"Brick"
- 添加Sprite组件用于视觉呈现  
- 添加RigidBody2D组件，类型设为STATIC
- 添加BoxCollider2D组件用于碰撞检测
- 将Brick.ts脚本添加到节点

#### 2. 刚体设置
在RigidBody2D组件中：
- **Type**: Static (静态刚体，位置固定)
- **Collision Group**: Brick
- **Collision Mask**: Ball (只与球碰撞)

#### 3. 碰撞器设置
在BoxCollider2D组件中：
- **Size**: 根据砖块大小调整，建议(60, 30)
- **Is Sensor**: false (实体碰撞)

#### 4. Sprite设置
在Sprite组件中：
- 设置颜色为红色、橙色或分配砖块贴图
- **Size Mode**: Custom
- **Custom Size**: (60, 30)

#### 5. 脚本参数设置
在Brick组件的Inspector面板中：
- **Health**: 1 (普通砖块) 或更高值 (坚硬砖块)
- **Score Value**: 10 (基础分数) 或根据砖块类型调整

#### 6. 砖块变体创建
创建不同类型的砖块预制体：
- **普通砖块**: Health=1, 红色
- **坚硬砖块**: Health=2-3, 蓝色或灰色  
- **特殊砖块**: Health=1, 特殊颜色，高分数奖励

#### 7. 场景生成
- 砖块通常由GameManager的`initializeLevel()`方法动态生成
- 使用6x8网格布局，间距约65像素
- 起始位置建议在屏幕上半部分

#### 8. 颜色配置
建议颜色方案：
- **Health=1**: 红色 (255, 0, 0)
- **Health=2**: 橙色 (255, 165, 0)  
- **Health=3**: 黄色 (255, 255, 0)
- **Health≥4**: 紫色 (128, 0, 128)

#### 9. 遗物效果测试
确保RelicManager.ts正确实现并在场景中可访问，以支持爆炸砖块等特殊效果。