## EliteAndHiddenBossManager.ts 脚本逻辑描述

### 核心功能
EliteAndHiddenBossManager管理精英关卡和隐藏Boss系统，提供20种精英关卡机制和5种隐藏Boss，每种都有独特的解锁条件、特殊机制和奖励系统。

### 精英关卡系统 (20种)

#### 基础精英机制 (0-4)
- **砖块要塞**: 大量强化砖块，80%特殊砖块比例
- **速度恶魔**: 快节奏压力，时间限制机制
- **再生者**: 砖块持续自我修复
- **元素混沌**: 90%特殊砖块，随机元素效果
- **重力异常**: 重力场持续扭曲变化

#### 高级精英机制 (5-9)
- **时间扭曲**: 时间流速随机变化
- **相位转换者**: 砖块随机可见/不可见切换
- **磁暴**: 强磁场影响球轨迹
- **护盾矩阵**: 砖块互相提供护盾保护
- **虚空腐蚀**: 虚空砖块扩散腐蚀，最高难度1.6倍

#### 元素精英机制 (10-14)
- **爆炸地雷**: 连锁爆炸威力巨大
- **冰河时代**: 冰冻效果持续扩散
- **火焰风暴**: 火焰持续伤害和蔓延
- **电网**: 电流在砖块间形成复杂网络
- **毒云**: 毒素持续扩散和累积

#### 特殊材质精英 (15-19)
- **水晶监狱**: 90%特殊砖块，水晶连锁反应
- **橡胶噩梦**: 超强反弹让球难以控制
- **金属要塞**: 金属砖块反弹攻击伤害
- **光影谜题**: 特殊视觉效果和光线机制
- **黑暗迷宫**: 视野限制增加难度

### 隐藏Boss系统 (5种)

#### 远古守护者 (ANCIENT_GUARDIAN)
- **解锁条件**: 完成3次无伤通关
- **Boss类型**: 守护墙Boss变体
- **难度倍率**: 2.5倍
- **特殊奖励**: 传说遗物"远古之力"

#### 虚空领主 (VOID_LORD)
- **解锁条件**: 收集5个虚空系遗物
- **Boss类型**: 传送者Boss变体
- **难度倍率**: 3.0倍 (最高难度)
- **特殊奖励**: 传说遗物"虚空掌控"

#### 时间编织者 (TIME_WEAVER)
- **解锁条件**: 在10个关卡创造速通记录
- **Boss类型**: 时间操控者Boss变体
- **难度倍率**: 2.8倍
- **特殊奖励**: 传说遗物"时间控制"

#### 元素化身 (ELEMENTAL_AVATAR)
- **解锁条件**: 使用所有元素攻击累计100次
- **Boss类型**: 元素混沌Boss变体
- **难度倍率**: 2.7倍
- **特殊奖励**: 传说遗物"元素精通"

#### 镜像阴影 (MIRROR_SHADOW)
- **解锁条件**: 执行神秘操作序列 (↑↑↓↓←→←→BA)
- **Boss类型**: 镜像Boss变体
- **难度倍率**: 3.2倍 (终极挑战)
- **特殊奖励**: 传说遗物"暗影掌控"

### 解锁条件追踪系统

#### 玩家统计数据
```typescript
private _playerStats = {
    perfectRuns: number,                    // 无伤通关次数
    collectedRelics: Set<string>,           // 收集的遗物
    timeRecords: Map<number, number>,       // 关卡速通记录
    usedElements: Set<string>,              // 使用过的元素
    secretSequence: string[]                // 神秘操作序列
}
```

#### 解锁检查机制
- **实时检查**: 玩家行为触发时立即检查解锁条件
- **条件验证**: 每种隐藏Boss有独特的解锁验证逻辑
- **进度保存**: 解锁进度持久化存储
- **通知系统**: 解锁时显示特殊通知

### 精英关卡配置系统

#### 配置接口
```typescript
interface EliteConfig {
    name: string,                    // 精英关卡名称
    description: string,             // 描述信息
    difficultyMultiplier: number,    // 难度倍率 (1.3-1.6)
    specialBrickRatio: number,       // 特殊砖块比例 (0.5-0.9)
    primaryBrickType: BrickType,     // 主要砖块类型
    secondaryBrickTypes: BrickType[], // 次要砖块类型
    specialMechanic: string          // 特殊机制标识
}
```

#### 难度缩放
- **基础难度**: 1 + (章节-1) * 0.5 + 关卡 * 0.1
- **精英倍率**: 基础难度 * 精英倍率 (1.3-1.6)
- **血量缩放**: 基础血量 * 难度 * 1.5
- **分数缩放**: 基础分数 * 难度 * 1.3

### 特殊机制系统

#### 机制类别
1. **防御机制**: 要塞防护、护盾网络、再生领域
2. **时空机制**: 时间扭曲、重力混乱、相位转换
3. **元素机制**: 火焰风暴、冰河时代、电网、毒云
4. **物理机制**: 磁暴、橡胶反弹、金属反射
5. **视觉机制**: 光影谜题、黑暗迷宫、相位转换

#### 机制激活
- **动态激活**: 根据精英类型激活对应机制
- **难度调节**: 机制强度随难度动态调整
- **视觉反馈**: 特殊机制有独特的视觉效果
- **音频提示**: 机制激活时的音频反馈

### Cocos Creator绑定说明

#### 1. 组件设置
- 在GameManager或专用节点添加EliteAndHiddenBossManager脚本
- **Enhanced Boss Prefab**: 拖拽增强Boss预制体
- **Enhanced Brick Prefab**: 拖拽增强砖块预制体

#### 2. 精英关卡生成
```typescript
// 生成精英关卡
const eliteManager = this.getComponent(EliteAndHiddenBossManager);
eliteManager.generateEliteLevel(EliteType.BRICK_FORTRESS, 2, 5);

// 获取精英配置信息
const config = eliteManager.getEliteConfig(EliteType.ELEMENTAL_CHAOS);
console.log(`Elite: ${config.name}, Difficulty: ${config.difficultyMultiplier}x`);
```

#### 3. 隐藏Boss管理
```typescript
// 记录玩家行为以触发解锁检查
eliteManager.recordPerfectRun();                    // 无伤通关
eliteManager.recordRelicCollected("void_mastery"); // 收集遗物
eliteManager.recordSpeedRun(5, 120.5);             // 速通记录
eliteManager.recordElementUsed("fire");            // 元素使用
eliteManager.recordSecretInput("up");              // 神秘输入

// 生成隐藏Boss
const hiddenBoss = eliteManager.spawnHiddenBoss(
    HiddenBossType.ANCIENT_GUARDIAN, 3
);
```

#### 4. GameManager集成
```typescript
// 在GameManager中集成精英系统
public startEliteLevel(eliteType: EliteType): void {
    const eliteManager = this.getComponent(EliteAndHiddenBossManager);
    eliteManager.generateEliteLevel(eliteType, this.currentChapter, this.currentLevel);
    
    // 更新UI显示精英关卡信息
    this.updateUIForEliteLevel(eliteType);
}

// 检查隐藏Boss解锁状态
public checkForHiddenBossUnlocks(): void {
    const eliteManager = this.getComponent(EliteAndHiddenBossManager);
    eliteManager.checkHiddenBossUnlocks();
}
```

#### 5. UI集成
```typescript
// 显示精英关卡信息
private displayEliteLevelInfo(config: EliteConfig): void {
    this.eliteNameLabel.string = config.name;
    this.eliteDescLabel.string = config.description;
    this.eliteDifficultyLabel.string = `难度: ${config.difficultyMultiplier}x`;
}

// 显示隐藏Boss解锁通知
private showHiddenBossUnlock(config: HiddenBossConfig): void {
    this.unlockNotification.active = true;
    this.unlockTitleLabel.string = config.name;
    this.unlockDescLabel.string = config.description;
}
```

#### 6. 存档系统集成
```typescript
// 保存解锁进度
public saveGameProgress(): void {
    const eliteManager = this.getComponent(EliteAndHiddenBossManager);
    const progressData = {
        unlockedHiddenBosses: eliteManager.getAllUnlockedHiddenBosses(),
        playerStats: eliteManager.getPlayerStats()
    };
    
    // 保存到本地存储或云存储
    cc.sys.localStorage.setItem('elite_progress', JSON.stringify(progressData));
}
```

#### 7. 关卡选择集成
```typescript
// 关卡选择界面显示精英关卡选项
public populateLevelSelection(): void {
    // 普通关卡
    this.addNormalLevels();
    
    // 精英关卡 (每章2-3个)
    for (let i = 0; i < 3; i++) {
        const eliteType = this.getRandomEliteType();
        this.addEliteLevelOption(eliteType);
    }
    
    // 解锁的隐藏Boss
    const eliteManager = this.getComponent(EliteAndHiddenBossManager);
    const unlockedBosses = eliteManager.getAllUnlockedHiddenBosses();
    for (const bossType of unlockedBosses) {
        this.addHiddenBossOption(bossType);
    }
}
```

#### 8. 奖励系统集成
```typescript
// 精英关卡完成奖励
public onEliteLevelComplete(eliteType: EliteType): void {
    // 基础奖励 * 精英倍率
    const config = this.eliteManager.getEliteConfig(eliteType);
    const bonusScore = this.baseScore * config.difficultyMultiplier;
    const bonusRelics = Math.floor(config.difficultyMultiplier);
    
    this.awardScore(bonusScore);
    this.awardRandomRelics(bonusRelics);
}

// 隐藏Boss完成奖励
public onHiddenBossDefeated(bossType: HiddenBossType): void {
    const config = this.eliteManager.getHiddenBossConfig(bossType);
    this.awardLegendaryRelic(config.specialReward);
    this.awardMassiveScore();
}
```

### 平衡性设计

#### 精英关卡平衡
- **难度递增**: 1.3x - 1.6x，确保挑战性但不过分
- **奖励匹配**: 高难度对应高奖励
- **机制多样性**: 每种机制提供不同的挑战类型
- **玩家选择**: 玩家可选择挑战哪些精英关卡

#### 隐藏Boss平衡
- **解锁条件**: 需要大量游戏时间投入
- **极高难度**: 2.5x - 3.2x难度倍率
- **独特奖励**: 传说级遗物只能通过隐藏Boss获得
- **重复挑战**: 解锁后可反复挑战

#### 进度保护
- **解锁永久**: 隐藏Boss解锁后永久可用
- **统计累积**: 玩家统计数据持续累积
- **多条路径**: 每种解锁条件都有多种达成方式

### 扩展性设计
- **模块化配置**: 易于添加新的精英类型和隐藏Boss
- **可配置参数**: 难度、奖励等参数可外部配置
- **事件系统**: 支持自定义解锁条件和特殊机制
- **国际化支持**: 名称和描述支持多语言