## PaddleController.ts 脚本逻辑描述

### 核心功能
PaddleController管理玩家挡板的移动控制，支持触摸和鼠标输入，具有边界限制和屏幕坐标转换功能。

### 主要组件
1. **输入处理**: 监听触摸移动和鼠标移动事件
2. **坐标转换**: 将屏幕坐标转换为世界坐标和局部坐标
3. **边界约束**: 确保挡板在屏幕可见范围内移动
4. **物理配置**: 静态/运动学刚体，不受物理力影响

### 关键属性
```typescript
private _camera: Camera              // 主摄像机引用
private _uiTransform: UITransform   // UI变换组件
private _isPressed: boolean         // 当前是否按压状态
```

### 关键方法
- `onLoad()`: 初始化摄像机引用和事件监听
- `onTouchMove()`: 处理触摸移动事件
- `onMouseMove()`: 处理鼠标移动事件  
- `updatePaddlePosition()`: 更新挡板位置并应用边界约束
- `calculateBounds()`: 计算挡板可移动的边界范围

### 物理特性
- 使用STATIC或KINEMATIC刚体类型
- 具有BoxCollider2D用于与球碰撞
- 不受重力和其他物理力影响

### Cocos Creator绑定说明

#### 1. 预制体创建
- 创建新节点，命名为"Paddle"
- 添加Sprite组件用于视觉呈现
- 添加RigidBody2D组件，类型设为STATIC
- 添加BoxCollider2D组件用于碰撞检测
- 将PaddleController.ts脚本添加到节点

#### 2. 碰撞设置
在RigidBody2D组件中：
- **Type**: Static (静态，由脚本控制位置)
- **Collision Group**: Paddle
- **Collision Mask**: Ball (只与球碰撞)

#### 3. 碰撞器设置  
在BoxCollider2D组件中：
- **Size**: 根据Sprite大小调整，建议(100, 20)
- **Is Sensor**: false (实体碰撞)

#### 4. Sprite设置
在Sprite组件中：
- 设置颜色为蓝色或分配挡板贴图
- **Size Mode**: Custom
- **Custom Size**: (100, 20)

#### 5. 场景放置
- 将Paddle预制体放置在GameScene中
- 位置设置为屏幕底部，建议Y坐标为-250
- 确保摄像机能够找到(通过find('Main Camera')或预设引用)

#### 6. 输入配置
系统会自动监听：
- 移动端：TouchMove事件
- PC端：MouseMove事件
脚本会根据平台自动选择合适的输入方式。

#### 7. 边界调整
边界计算基于父节点的UITransform，如需调整可移动范围，修改calculateBounds()方法中的边距值。