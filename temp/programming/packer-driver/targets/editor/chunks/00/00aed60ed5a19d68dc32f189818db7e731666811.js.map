{"version":3,"sources":["file:///D:/project/claudecode/wx/Cat_Journey/assets/scripts/GameManager.ts"],"names":["_decorator","Component","Node","Prefab","instantiate","director","RelicManager","ccclass","property","GameState","GameManager","_currentState","PRE_START","_bricks","_ballNode","_paddleNode","getInstance","_instance","onLoad","addPersistRootNode","node","destroy","onDestroy","start","initializeGame","setState","createPaddle","createBall","setupLevel","scheduleOnce","PLAYING","paddlePrefab","setPosition","addChild","ballPrefab","clearBricks","layout","getLevelLayout","level","createBricksFromLayout","basicLayout","row","length","col","Math","random","brickPrefab","brickContainer","startX","startY","brickWidth","brickHeight","spacing","brickType","brick","x","y","brickScript","getComponent","setHealth","push","forEach","isValid","onBrickDestroyed","scoreValue","brickPosition","score","powerUpDropChance","dropPowerUp","filter","onLevelComplete","position","powerUps","multiBallPowerUpPrefab","laserPaddlePowerUpPrefab","availablePowerUps","prefab","randomPowerUp","floor","powerUpNode","onBallLost","lives","GAME_OVER","resetBall","ballScript","LEVEL_COMPLETE","relicManager","grantRandomRelic","newState","console","log","getCurrentState","getBallPrefab","getScore","getLives","getLevel"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, instantiate, Vec3, director } from 'cc';\r\nimport { RelicManager } from './RelicManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport enum GameState {\r\n    PRE_START = 'PRE_START',\r\n    PLAYING = 'PLAYING',\r\n    LEVEL_COMPLETE = 'LEVEL_COMPLETE',\r\n    GAME_OVER = 'GAME_OVER'\r\n}\r\n\r\n@ccclass('GameManager')\r\nexport class GameManager extends Component {\r\n    @property(Prefab)\r\n    public brickPrefab: Prefab | null = null;\r\n\r\n    @property(Prefab)\r\n    public paddlePrefab: Prefab | null = null;\r\n\r\n    @property(Prefab)\r\n    public ballPrefab: Prefab | null = null;\r\n\r\n    @property(Prefab)\r\n    public multiBallPowerUpPrefab: Prefab | null = null;\r\n\r\n    @property(Prefab)\r\n    public laserPaddlePowerUpPrefab: Prefab | null = null;\r\n\r\n    @property\r\n    public powerUpDropChance: number = 0.2;\r\n\r\n    @property(Node)\r\n    public brickContainer: Node | null = null;\r\n\r\n    @property\r\n    public lives: number = 3;\r\n\r\n    @property\r\n    public score: number = 0;\r\n\r\n    @property\r\n    public level: number = 1;\r\n\r\n    private static _instance: GameManager | null = null;\r\n    private _currentState: GameState = GameState.PRE_START;\r\n    private _bricks: Node[] = [];\r\n    private _ballNode: Node | null = null;\r\n    private _paddleNode: Node | null = null;\r\n\r\n    public static getInstance(): GameManager | null {\r\n        return GameManager._instance;\r\n    }\r\n\r\n    protected onLoad(): void {\r\n        if (GameManager._instance === null) {\r\n            GameManager._instance = this;\r\n            director.addPersistRootNode(this.node);\r\n        } else {\r\n            this.node.destroy();\r\n            return;\r\n        }\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        if (GameManager._instance === this) {\r\n            GameManager._instance = null;\r\n        }\r\n    }\r\n\r\n    protected start(): void {\r\n        this.initializeGame();\r\n    }\r\n\r\n    private initializeGame(): void {\r\n        this.setState(GameState.PRE_START);\r\n        this.createPaddle();\r\n        this.createBall();\r\n        this.setupLevel();\r\n        this.scheduleOnce(() => {\r\n            this.setState(GameState.PLAYING);\r\n        }, 2.0);\r\n    }\r\n\r\n    private createPaddle(): void {\r\n        if (!this.paddlePrefab) return;\r\n        \r\n        this._paddleNode = instantiate(this.paddlePrefab);\r\n        this._paddleNode.setPosition(0, -250, 0);\r\n        this.node.addChild(this._paddleNode);\r\n    }\r\n\r\n    private createBall(): void {\r\n        if (!this.ballPrefab) return;\r\n        \r\n        this._ballNode = instantiate(this.ballPrefab);\r\n        this._ballNode.setPosition(0, -150, 0);\r\n        this.node.addChild(this._ballNode);\r\n    }\r\n\r\n    private setupLevel(): void {\r\n        this.clearBricks();\r\n        const layout = this.getLevelLayout(this.level);\r\n        this.createBricksFromLayout(layout);\r\n    }\r\n\r\n    private getLevelLayout(level: number): number[][] {\r\n        const basicLayout = [\r\n            [1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1]\r\n        ];\r\n\r\n        if (level > 1) {\r\n            for (let row = 0; row < basicLayout.length; row++) {\r\n                for (let col = 0; col < basicLayout[row].length; col++) {\r\n                    if (Math.random() < 0.3) {\r\n                        basicLayout[row][col] = 2;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return basicLayout;\r\n    }\r\n\r\n    private createBricksFromLayout(layout: number[][]): void {\r\n        if (!this.brickPrefab || !this.brickContainer) return;\r\n\r\n        const startX = -280;\r\n        const startY = 200;\r\n        const brickWidth = 80;\r\n        const brickHeight = 40;\r\n        const spacing = 10;\r\n\r\n        for (let row = 0; row < layout.length; row++) {\r\n            for (let col = 0; col < layout[row].length; col++) {\r\n                const brickType = layout[row][col];\r\n                if (brickType === 0) continue;\r\n\r\n                const brick = instantiate(this.brickPrefab);\r\n                const x = startX + col * (brickWidth + spacing);\r\n                const y = startY - row * (brickHeight + spacing);\r\n                \r\n                brick.setPosition(x, y, 0);\r\n                \r\n                const brickScript = brick.getComponent('Brick');\r\n                if (brickScript) {\r\n                    (brickScript as any).setHealth(brickType);\r\n                }\r\n\r\n                this.brickContainer.addChild(brick);\r\n                this._bricks.push(brick);\r\n            }\r\n        }\r\n    }\r\n\r\n    private clearBricks(): void {\r\n        this._bricks.forEach(brick => {\r\n            if (brick && brick.isValid) {\r\n                brick.destroy();\r\n            }\r\n        });\r\n        this._bricks = [];\r\n    }\r\n\r\n    public onBrickDestroyed(scoreValue: number = 10, brickPosition?: Vec3): void {\r\n        this.score += scoreValue;\r\n        \r\n        if (brickPosition && Math.random() < this.powerUpDropChance) {\r\n            this.dropPowerUp(brickPosition);\r\n        }\r\n        \r\n        this._bricks = this._bricks.filter(brick => brick && brick.isValid);\r\n        \r\n        if (this._bricks.length === 0) {\r\n            this.onLevelComplete();\r\n        }\r\n    }\r\n\r\n    private dropPowerUp(position: Vec3): void {\r\n        const powerUps = [this.multiBallPowerUpPrefab, this.laserPaddlePowerUpPrefab];\r\n        const availablePowerUps = powerUps.filter(prefab => prefab !== null);\r\n        \r\n        if (availablePowerUps.length === 0) return;\r\n        \r\n        const randomPowerUp = availablePowerUps[Math.floor(Math.random() * availablePowerUps.length)];\r\n        if (randomPowerUp) {\r\n            const powerUpNode = instantiate(randomPowerUp);\r\n            powerUpNode.setPosition(position);\r\n            this.node.addChild(powerUpNode);\r\n        }\r\n    }\r\n\r\n    public onBallLost(): void {\r\n        this.lives--;\r\n        \r\n        if (this.lives <= 0) {\r\n            this.setState(GameState.GAME_OVER);\r\n        } else {\r\n            this.resetBall();\r\n        }\r\n    }\r\n\r\n    private resetBall(): void {\r\n        if (this._ballNode) {\r\n            const ballScript = this._ballNode.getComponent('Ball');\r\n            if (ballScript) {\r\n                (ballScript as any).resetBall();\r\n            }\r\n        }\r\n    }\r\n\r\n    private onLevelComplete(): void {\r\n        this.setState(GameState.LEVEL_COMPLETE);\r\n        this.level++;\r\n        \r\n        const relicManager = RelicManager.getInstance();\r\n        if (relicManager) {\r\n            relicManager.grantRandomRelic();\r\n        }\r\n        \r\n        this.scheduleOnce(() => {\r\n            this.setupLevel();\r\n            this.setState(GameState.PLAYING);\r\n        }, 3.0);\r\n    }\r\n\r\n    public setState(newState: GameState): void {\r\n        this._currentState = newState;\r\n        console.log(`Game State Changed: ${newState}`);\r\n    }\r\n\r\n    public getCurrentState(): GameState {\r\n        return this._currentState;\r\n    }\r\n\r\n    public getBallPrefab(): Prefab | null {\r\n        return this.ballPrefab;\r\n    }\r\n\r\n    public getScore(): number {\r\n        return this.score;\r\n    }\r\n\r\n    public getLives(): number {\r\n        return this.lives;\r\n    }\r\n\r\n    public getLevel(): number {\r\n        return this.level;\r\n    }\r\n}"]}