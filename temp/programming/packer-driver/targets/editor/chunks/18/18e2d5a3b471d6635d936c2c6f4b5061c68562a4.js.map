{"version":3,"sources":["file:///D:/project/claudecode/wx/Cat_Journey/assets/scripts/managers/SimpleExperienceOrb.ts"],"names":["_decorator","Component","Vec3","Vec2","Collider2D","Contact2DType","Sprite","Color","GameManager","ExperienceManager","ccclass","property","SimpleExperienceOrb","_velocity","_paddleNode","_isCollected","_lifeTime","onLoad","collider","getComponent","on","BEGIN_CONTACT","onBeginContact","x","Math","random","y","fallSpeed","start","gameManager","getInstance","getPaddleNode","update","dt","node","destroy","currentPos","position","isValid","distance","magnetRange","direction","subtract","normalize","magnetSpeed","newPos","z","setPosition","selfCollider","otherCollider","contact","otherNode","name","includes","collect","expManager","addExperience","experienceValue","playCollectEffect","scheduleOnce","sprite","color","setScale"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec3, Vec2, Collider2D, Contact2DType, IPhysics2DContact, Sprite, Color } from 'cc';\r\nimport { GameManager } from '../gameplay/GameManager';\r\nimport { ExperienceManager } from './ExperienceManager';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * 简化版经验球组件\r\n *\r\n * Linus式设计：移除复杂物理，使用简单位置更新\r\n * \"好品味意味着消除特殊情况\"\r\n */\r\n@ccclass('SimpleExperienceOrb')\r\nexport class SimpleExperienceOrb extends Component {\r\n    @property\r\n    public experienceValue: number = 10;\r\n\r\n    @property\r\n    public fallSpeed: number = 150;\r\n\r\n    @property\r\n    public magnetRange: number = 100;\r\n\r\n    @property\r\n    public magnetSpeed: number = 300;\r\n\r\n    private _velocity: Vec2 = new Vec2(0, -150);\r\n    private _paddleNode: Node | null = null;\r\n    private _isCollected: boolean = false;\r\n    private _lifeTime: number = 0;\r\n\r\n    protected onLoad(): void {\r\n        // 设置碰撞检测\r\n        const collider = this.getComponent(Collider2D);\r\n        if (collider) {\r\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n        }\r\n\r\n        // 初始化随机横向速度\r\n        this._velocity.x = (Math.random() - 0.5) * 50;\r\n        this._velocity.y = -this.fallSpeed;\r\n    }\r\n\r\n    protected start(): void {\r\n        // 查找挡板节点\r\n        const gameManager = GameManager.getInstance();\r\n        if (gameManager) {\r\n            this._paddleNode = gameManager.getPaddleNode();\r\n        }\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        if (this._isCollected) return;\r\n\r\n        // 生命周期管理 - 8秒后自动销毁\r\n        this._lifeTime += dt;\r\n        if (this._lifeTime > 8) {\r\n            this.node.destroy();\r\n            return;\r\n        }\r\n\r\n        const currentPos = this.node.position;\r\n\r\n        // 磁力吸引效果\r\n        if (this._paddleNode && this._paddleNode.isValid) {\r\n            const distance = Vec3.distance(currentPos, this._paddleNode.position);\r\n\r\n            if (distance < this.magnetRange) {\r\n                // 计算吸引方向\r\n                const direction = new Vec3();\r\n                Vec3.subtract(direction, this._paddleNode.position, currentPos);\r\n                direction.normalize();\r\n\r\n                // 应用磁力\r\n                this._velocity.x = direction.x * this.magnetSpeed;\r\n                this._velocity.y = direction.y * this.magnetSpeed;\r\n            }\r\n        }\r\n\r\n        // 更新位置\r\n        const newPos = new Vec3(\r\n            currentPos.x + this._velocity.x * dt,\r\n            currentPos.y + this._velocity.y * dt,\r\n            currentPos.z\r\n        );\r\n\r\n        // 边界检查 - 防止飞出屏幕\r\n        if (newPos.y < -400) {\r\n            this.node.destroy();\r\n            return;\r\n        }\r\n\r\n        this.node.setPosition(newPos);\r\n    }\r\n\r\n    private onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null): void {\r\n        if (this._isCollected) return;\r\n\r\n        const otherNode = otherCollider.node;\r\n\r\n        // 检查是否被挡板收集\r\n        if (otherNode.name.includes('Paddle')) {\r\n            this.collect();\r\n        }\r\n    }\r\n\r\n    private collect(): void {\r\n        if (this._isCollected) return;\r\n        this._isCollected = true;\r\n\r\n        // 添加经验值\r\n        const expManager = ExperienceManager.getInstance();\r\n        if (expManager) {\r\n            expManager.addExperience(this.experienceValue);\r\n        }\r\n\r\n        // 简单的收集效果\r\n        this.playCollectEffect();\r\n\r\n        // 延迟销毁，让效果播放\r\n        this.scheduleOnce(() => {\r\n            this.node.destroy();\r\n        }, 0.2);\r\n    }\r\n\r\n    private playCollectEffect(): void {\r\n        // 简单的闪光效果\r\n        const sprite = this.getComponent(Sprite);\r\n        if (sprite) {\r\n            sprite.color = new Color(255, 255, 255, 255);\r\n        }\r\n\r\n        // 缩放动画\r\n        this.node.setScale(1.5, 1.5, 1);\r\n    }\r\n}"]}