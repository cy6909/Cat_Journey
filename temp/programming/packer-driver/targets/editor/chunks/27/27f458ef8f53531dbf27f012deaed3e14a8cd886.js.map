{"version":3,"sources":["file:///D:/project/claudecode/wx/Cat_Journey/assets/scripts/Ball.ts"],"names":["_decorator","Component","RigidBody2D","Vec2","PhysicsMaterial","ccclass","property","Ball","_rigidBody","onLoad","getComponent","physicsMaterial","friction","restitution","colliders","node","getComponents","forEach","collider","material","start","launch","angle","Math","PI","random","velocity","cos","initialSpeed","sin","linearVelocity","resetBall","setPosition","scheduleOnce","update","speed","length","maxSpeed","normalize","multiplyScalar"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,e,OAAAA,e;;;;;;;;;OACnD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;sBAGjBO,I,WADZF,OAAO,CAAC,MAAD,C,2BAAR,MACaE,IADb,SAC0BN,SAD1B,CACoC;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAOxBO,UAPwB,GAOS,IAPT;AAAA;;AAStBC,QAAAA,MAAM,GAAS;AACrB,eAAKD,UAAL,GAAkB,KAAKE,YAAL,CAAkBR,WAAlB,CAAlB;;AAEA,cAAI,KAAKM,UAAT,EAAqB;AACjB,kBAAMG,eAAe,GAAG,IAAIP,eAAJ,EAAxB;AACAO,YAAAA,eAAe,CAACC,QAAhB,GAA2B,GAA3B;AACAD,YAAAA,eAAe,CAACE,WAAhB,GAA8B,GAA9B;AAEA,kBAAMC,SAAS,GAAG,KAAKC,IAAL,CAAUC,aAAV,CAAwB,eAAxB,CAAlB;AACAF,YAAAA,SAAS,CAACG,OAAV,CAAkBC,QAAQ,IAAI;AACzBA,cAAAA,QAAD,CAAkBC,QAAlB,GAA6BR,eAA7B;AACH,aAFD;AAGH;AACJ;;AAESS,QAAAA,KAAK,GAAS;AACpB,eAAKC,MAAL;AACH;;AAEMA,QAAAA,MAAM,GAAS;AAClB,cAAI,CAAC,KAAKb,UAAV,EAAsB;AAEtB,gBAAMc,KAAK,GAAGC,IAAI,CAACC,EAAL,GAAU,CAAV,GAAcD,IAAI,CAACE,MAAL,MAAiBF,IAAI,CAACC,EAAL,GAAU,CAA3B,CAA5B;AACA,gBAAME,QAAQ,GAAG,IAAIvB,IAAJ,CACboB,IAAI,CAACI,GAAL,CAASL,KAAT,IAAkB,KAAKM,YADV,EAEbL,IAAI,CAACM,GAAL,CAASP,KAAT,IAAkB,KAAKM,YAFV,CAAjB;AAKA,eAAKpB,UAAL,CAAgBsB,cAAhB,GAAiCJ,QAAjC;AACH;;AAEMK,QAAAA,SAAS,GAAS;AACrB,cAAI,CAAC,KAAKvB,UAAV,EAAsB;AAEtB,eAAKO,IAAL,CAAUiB,WAAV,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B;AACA,eAAKxB,UAAL,CAAgBsB,cAAhB,GAAiC,IAAI3B,IAAJ,CAAS,CAAT,EAAY,CAAZ,CAAjC;AACA,eAAK8B,YAAL,CAAkB,MAAM,KAAKZ,MAAL,EAAxB,EAAuC,GAAvC;AACH;;AAESa,QAAAA,MAAM,GAAS;AACrB,cAAI,CAAC,KAAK1B,UAAV,EAAsB;AAEtB,gBAAMkB,QAAQ,GAAG,KAAKlB,UAAL,CAAgBsB,cAAjC;AACA,gBAAMK,KAAK,GAAGT,QAAQ,CAACU,MAAT,EAAd;;AAEA,cAAID,KAAK,GAAG,KAAKE,QAAjB,EAA2B;AACvBX,YAAAA,QAAQ,CAACY,SAAT;AACAZ,YAAAA,QAAQ,CAACa,cAAT,CAAwB,KAAKF,QAA7B;AACA,iBAAK7B,UAAL,CAAgBsB,cAAhB,GAAiCJ,QAAjC;AACH,WAJD,MAIO,IAAIS,KAAK,GAAG,KAAKP,YAAL,GAAoB,GAAhC,EAAqC;AACxCF,YAAAA,QAAQ,CAACY,SAAT;AACAZ,YAAAA,QAAQ,CAACa,cAAT,CAAwB,KAAKX,YAA7B;AACA,iBAAKpB,UAAL,CAAgBsB,cAAhB,GAAiCJ,QAAjC;AACH;AACJ;;AA/D+B,O,+EAC/BpB,Q;;;;;iBAC6B,G;;mFAE7BA,Q;;;;;iBACyB,G","sourcesContent":["import { _decorator, Component, Node, RigidBody2D, Vec2, PhysicsMaterial } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Ball')\r\nexport class Ball extends Component {\r\n    @property\r\n    public initialSpeed: number = 400;\r\n\r\n    @property\r\n    public maxSpeed: number = 600;\r\n\r\n    private _rigidBody: RigidBody2D | null = null;\r\n\r\n    protected onLoad(): void {\r\n        this._rigidBody = this.getComponent(RigidBody2D);\r\n        \r\n        if (this._rigidBody) {\r\n            const physicsMaterial = new PhysicsMaterial();\r\n            physicsMaterial.friction = 0.0;\r\n            physicsMaterial.restitution = 1.0;\r\n            \r\n            const colliders = this.node.getComponents('cc.Collider2D');\r\n            colliders.forEach(collider => {\r\n                (collider as any).material = physicsMaterial;\r\n            });\r\n        }\r\n    }\r\n\r\n    protected start(): void {\r\n        this.launch();\r\n    }\r\n\r\n    public launch(): void {\r\n        if (!this._rigidBody) return;\r\n\r\n        const angle = Math.PI / 4 + Math.random() * (Math.PI / 2);\r\n        const velocity = new Vec2(\r\n            Math.cos(angle) * this.initialSpeed,\r\n            Math.sin(angle) * this.initialSpeed\r\n        );\r\n\r\n        this._rigidBody.linearVelocity = velocity;\r\n    }\r\n\r\n    public resetBall(): void {\r\n        if (!this._rigidBody) return;\r\n        \r\n        this.node.setPosition(0, 0, 0);\r\n        this._rigidBody.linearVelocity = new Vec2(0, 0);\r\n        this.scheduleOnce(() => this.launch(), 1.0);\r\n    }\r\n\r\n    protected update(): void {\r\n        if (!this._rigidBody) return;\r\n\r\n        const velocity = this._rigidBody.linearVelocity;\r\n        const speed = velocity.length();\r\n        \r\n        if (speed > this.maxSpeed) {\r\n            velocity.normalize();\r\n            velocity.multiplyScalar(this.maxSpeed);\r\n            this._rigidBody.linearVelocity = velocity;\r\n        } else if (speed < this.initialSpeed * 0.8) {\r\n            velocity.normalize();\r\n            velocity.multiplyScalar(this.initialSpeed);\r\n            this._rigidBody.linearVelocity = velocity;\r\n        }\r\n    }\r\n}"]}