{"version":3,"sources":["file:///D:/project/claudecode/wx/Cat_Journey/assets/scripts/gameplay/GameManager.ts"],"names":["_decorator","Component","Node","Prefab","instantiate","Vec3","director","Color","Sprite","PhysicsSystem2D","input","Input","KeyCode","Vec2","RelicManager","CoreController","DifficultyCalculator","LayoutGenerator","ccclass","property","GameState","GameManager","_currentState","PRE_START","_bricks","_ballNode","_paddleNode","_coreController","_levelManager","_currentDifficulty","_brickDistribution","getInstance","_instance","onLoad","console","log","addPersistRootNode","node","on","EventType","KEY_DOWN","onKeyDown","destroy","onDestroy","off","start","initializeGame","initializeCore","window","addEventListener","e","key","code","keyCode","cycleBallType","event","SPACE","name","ballScript","getComponent","constructor","cycleToNextBallType","warn","Object","getOwnPropertyNames","getPrototypeOf","error","components","map","c","setState","instance","debugDrawFlags","gravity","createBoundaryWalls","createPaddle","scheduleOnce","createBallBasedOnPaddle","setupLevel","PLAYING","coreNode","paddlePrefab","setPosition","canvas","parent","addChild","ballPrefab","paddlePos","position","x","y","z","ballPos","setPaddleReference","createBall","wallPrefab","parentNode","leftWall","setScale","leftSprite","color","rightWall","rightSprite","topWall","topSprite","bottomWall","bottomSprite","launchBall","launch","level","calculateDifficulty","getBrickDistribution","formatConfig","clearBricks","brickData","generateLayout","createBricksFromData","brickDataArray","brickPrefab","brickContainer","config","wallInnerBoundary","actualBrickWidth","actualBrickHeight","spacing","availableWidth","finalCols","gridCols","finalTotalWidth","filteredBricks","filter","brick","col","startX","startY","length","gridRows","toFixed","applyDifficultyToBricks","data","row","brickScript","brickType","type","initializeBrickType","typesWithHardcodedHealth","includes","health","_maxHealth","push","dist","reactiveBricks","finalType","Math","random","beneficialBrickChance","selectBrickTypeByWeight","beneficial","types","weights","harmfulBrickChance","harmful","reactive","chance","tooClose","pos","distance","abs","minDistance","floor","loadLevel","customConfig","getLevelLayout","basicLayout","createBricksFromLayout","layout","cols","totalBrickArea","finalLayout","slice","enhancedBrickType","getBrickTypeFromValue","undefined","setHealth","setDropsExperience","layoutValue","BrickType","NORMAL","REINFORCED","EXPLOSIVE","ELECTRIC","EXPERIENCE","REGENERATING","PHASE","MAGNETIC","REFLECTIVE","POISON","ICE","FIRE","SPLITTING","TELEPORT","SHIELD","GRAVITY","TIME","HEALING","CURSED","CRYSTAL","RUBBER","METAL","VOID","LIGHT","DARK","totalPositions","levelDifficulty","rareTypes","typeIndex","earlySpecial","forEach","isValid","onBrickDestroyed","scoreValue","brickPosition","dropsExperience","score","powerUpDropChance","dropPowerUp","dropExperienceOrb","checkLevelComplete","powerUps","multiBallPowerUpPrefab","laserPaddlePowerUpPrefab","availablePowerUps","prefab","randomPowerUp","powerUpNode","onBallLost","lives","takeDamage","GAME_OVER","resetBall","onCoreAttacked","damage","onCoreDestroyed","onBossDefeated","onLevelComplete","experienceOrbPrefab","orbNode","LEVEL_COMPLETE","relicManager","grantRandomRelic","resetLevel","adjustDifficulty","newState","validStates","values","oldState","onStateChanged","_oldState","handleGameOver","handleLevelComplete","handleGamePlaying","getCurrentState","getBallPrefab","getScore","getLives","getLevel","getBrickCount","getBricks","getBallNode","getPaddleNode","getCoreController","getLevelManager","getGameState","addScore","points","decreaseLives","amount","max"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, instantiate, Vec3, director, Color, Sprite, PhysicsSystem2D, input, Input, EventKeyboard, KeyCode, Vec2 } from 'cc';\r\nimport { RelicManager } from '../managers/RelicManager';\r\nimport { LevelManager, LevelType } from './LevelManager';\r\nimport { CoreController } from '../managers/CoreController';\r\nimport { DifficultyCalculator, DifficultyConfig, BrickDistribution } from './DifficultySystem';\r\nimport { LayoutGenerator, BrickData } from './LayoutGenerator';\r\nimport { BrickType } from './EnhancedBrick';\r\n// import { RuntimeDebugPanel } from '../debug/RuntimeDebugPanel';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport enum GameState {\r\n    PRE_START = 'PRE_START',\r\n    PLAYING = 'PLAYING',\r\n    LEVEL_COMPLETE = 'LEVEL_COMPLETE',\r\n    GAME_OVER = 'GAME_OVER'\r\n}\r\n\r\n@ccclass('GameManager')\r\nexport class GameManager extends Component {\r\n    @property(Prefab)\r\n    public brickPrefab: Prefab | null = null;\r\n\r\n    @property(Prefab)\r\n    public paddlePrefab: Prefab | null = null;\r\n\r\n    @property(Prefab)\r\n    public ballPrefab: Prefab | null = null;\r\n\r\n    @property(Prefab)\r\n    public multiBallPowerUpPrefab: Prefab | null = null;\r\n\r\n    @property(Prefab)\r\n    public laserPaddlePowerUpPrefab: Prefab | null = null;\r\n\r\n    @property(Prefab)\r\n    public wallPrefab: Prefab | null = null;\r\n\r\n    @property(Prefab)\r\n    public deathZonePrefab: Prefab | null = null;\r\n\r\n    @property\r\n    public powerUpDropChance: number = 0.2;\r\n\r\n    @property(Node)\r\n    public brickContainer: Node | null = null;\r\n\r\n    @property(Node)\r\n    public coreNode: Node | null = null;\r\n\r\n    @property(Prefab)\r\n    public experienceOrbPrefab: Prefab | null = null;\r\n\r\n    @property\r\n    public lives: number = 3;\r\n\r\n    @property\r\n    public score: number = 0;\r\n\r\n    @property\r\n    public level: number = 1;\r\n\r\n    private static _instance: GameManager | null = null;\r\n    private _currentState: GameState = GameState.PRE_START;\r\n    private _bricks: Node[] = [];\r\n    private _ballNode: Node | null = null;\r\n    private _paddleNode: Node | null = null;\r\n    private _coreController: CoreController | null = null;\r\n    private _levelManager: LevelManager | null = null;\r\n    private _currentDifficulty: DifficultyConfig | null = null;\r\n    private _brickDistribution: BrickDistribution | null = null;\r\n\r\n    public static getInstance(): GameManager | null {\r\n        return GameManager._instance;\r\n    }\r\n\r\n    protected onLoad(): void {\r\n        console.log('🎮 GameManager onLoad called');\r\n        if (GameManager._instance === null) {\r\n            GameManager._instance = this;\r\n            director.addPersistRootNode(this.node);\r\n\r\n            // 添加键盘监听用于测试BallType切换\r\n            input.on(Input.EventType.KEY_DOWN, this.onKeyDown, this);\r\n            console.log('✅ GameManager: Keyboard listener registered for ball type switching');\r\n            console.log('✅ GameManager instance created and keyboard listener active');\r\n        } else {\r\n            console.log('⚠️ GameManager instance already exists, destroying duplicate');\r\n            this.node.destroy();\r\n            return;\r\n        }\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        if (GameManager._instance === this) {\r\n            GameManager._instance = null;\r\n            // 移除键盘监听\r\n            input.off(Input.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        }\r\n    }\r\n\r\n    protected start(): void {\r\n        console.log('🎮 GameManager start called');\r\n        this.initializeGame();\r\n        this.initializeCore();\r\n        // this.initializeLevelManager(); // 暂时注释掉\r\n\r\n        // 🔧 测试：添加全局键盘监听\r\n        window.addEventListener('keydown', (e) => {\r\n            console.log('🌐 Window keydown event:', e.key, e.code, e.keyCode);\r\n            if (e.code === 'Space' || e.keyCode === 32) {\r\n                console.log('🔑 SPACE detected via window listener');\r\n                this.cycleBallType();\r\n            }\r\n        });\r\n        console.log('🔧 Added window.addEventListener for keyboard testing');\r\n    }\r\n    \r\n    private onKeyDown(event: EventKeyboard): void {\r\n        console.log('⌨️ Key pressed:', event.keyCode, 'SPACE keyCode:', KeyCode.SPACE);\r\n\r\n        switch (event.keyCode) {\r\n            case KeyCode.SPACE:\r\n                // 空格键：切换Ball类型来验证25种颜色\r\n                console.log('🔑 SPACE key detected, attempting to cycle ball type...');\r\n                this.cycleBallType();\r\n                break;\r\n            default:\r\n                console.log('Other key pressed:', event.keyCode);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private cycleBallType(): void {\r\n        if (this._ballNode) {\r\n            console.log('Ball node exists:', this._ballNode.name);\r\n\r\n            // 尝试获取EnhancedBall组件\r\n            let ballScript = this._ballNode.getComponent('EnhancedBall');\r\n\r\n            // 如果没有EnhancedBall，尝试获取Ball组件\r\n            if (!ballScript) {\r\n                console.log('EnhancedBall not found, trying Ball component...');\r\n                ballScript = this._ballNode.getComponent('Ball');\r\n            }\r\n\r\n            if (ballScript) {\r\n                console.log('Ball script found:', ballScript.constructor.name);\r\n\r\n                // 检查是否有cycleToNextBallType方法\r\n                if (typeof (ballScript as any).cycleToNextBallType === 'function') {\r\n                    console.log('✅ Calling cycleToNextBallType()');\r\n                    (ballScript as any).cycleToNextBallType();\r\n                } else {\r\n                    console.warn('❌ Ball script does not have cycleToNextBallType method');\r\n                    console.log('Available methods:', Object.getOwnPropertyNames(Object.getPrototypeOf(ballScript)));\r\n                }\r\n            } else {\r\n                console.error('❌ No ball script found on ball node');\r\n                console.log('Ball node components:', this._ballNode.components.map(c => c.constructor.name));\r\n            }\r\n        } else {\r\n            console.error('❌ Ball node is null, ballNode value:', this._ballNode);\r\n        }\r\n    }\r\n\r\n    private initializeGame(): void {\r\n        this.setState(GameState.PRE_START);\r\n        \r\n        // 关闭物理调试显示\r\n        PhysicsSystem2D.instance.debugDrawFlags = 0; \r\n        // 设置物理系统重力为0 - Breakout游戏不需要重力！\r\n        PhysicsSystem2D.instance.gravity = new Vec2(0, 0);\r\n        console.log('Physics system: Debug draw disabled, gravity set to 0');\r\n        \r\n        this.createBoundaryWalls();\r\n        this.createPaddle();\r\n        \r\n        // 延迟创建Ball，确保Paddle完全初始化\r\n        this.scheduleOnce(() => {\r\n            this.createBallBasedOnPaddle();\r\n        }, 0.1);\r\n        \r\n        this.setupLevel();\r\n        // this.createDebugPanel(); // 暂时注释掉，先修复场景加载问题\r\n        \r\n        // Ball现在由鼠标点击控制发射，不需要自动延迟发射\r\n        this.setState(GameState.PLAYING);\r\n    }\r\n\r\n    private initializeCore(): void {\r\n        if (this.coreNode) {\r\n            this._coreController = this.coreNode.getComponent(CoreController);\r\n            if (!this._coreController) {\r\n                console.warn('CoreController not found on coreNode');\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n    private initializeLevelManager(): void {\r\n        this._levelManager = LevelManager.getInstance();\r\n        if (!this._levelManager) {\r\n            console.warn('LevelManager instance not found');\r\n        }\r\n    }\r\n    */\r\n\r\n    private createPaddle(): void {\r\n        try {\r\n            if (!this.paddlePrefab) {\r\n                console.warn('Paddle prefab not assigned - skipping paddle creation');\r\n                return;\r\n            }\r\n            \r\n            this._paddleNode = instantiate(this.paddlePrefab);\r\n            if (this._paddleNode) {\r\n                this._paddleNode.setPosition(0, -300, 0);\r\n                // 统一添加到Canvas下\r\n                const canvas = this.node.parent;\r\n                if (canvas) {\r\n                    canvas.addChild(this._paddleNode);\r\n                    console.log('Paddle created successfully and added to Canvas');\r\n                } else {\r\n                    this.node.addChild(this._paddleNode);\r\n                    console.log('Paddle created successfully and added to GameManager');\r\n                }\r\n            } else {\r\n                console.error('Failed to instantiate paddle prefab');\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.error('Error creating paddle:', error);\r\n        }\r\n    }\r\n\r\n    private createBallBasedOnPaddle(): void {\r\n        try {\r\n            if (!this.ballPrefab) {\r\n                console.warn('Ball prefab not assigned - skipping ball creation');\r\n                return;\r\n            }\r\n            \r\n            if (!this._paddleNode) {\r\n                console.error('Cannot create ball - paddle not found');\r\n                return;\r\n            }\r\n            \r\n            // 获取Paddle的实际位置\r\n            const paddlePos = this._paddleNode.position;\r\n            console.log(`Paddle actual position: (${paddlePos.x}, ${paddlePos.y}, ${paddlePos.z})`);\r\n            \r\n            this._ballNode = instantiate(this.ballPrefab);\r\n            if (this._ballNode) {\r\n                // Ball位置基于Paddle实际位置，上方20像素\r\n                const ballPos = new Vec3(paddlePos.x, paddlePos.y + 20, paddlePos.z);\r\n                this._ballNode.setPosition(ballPos);\r\n                \r\n                console.log(`Ball positioned at: (${ballPos.x}, ${ballPos.y}, ${ballPos.z})`);\r\n                \r\n                // 将Ball添加到Canvas下，与Paddle同级\r\n                const canvas = this.node.parent;\r\n                if (canvas) {\r\n                    canvas.addChild(this._ballNode);\r\n                    console.log('Ball created successfully and added to Canvas');\r\n                } else {\r\n                    this.node.addChild(this._ballNode);\r\n                    console.log('Ball created successfully and added to GameManager');\r\n                }\r\n                \r\n                // 通知Ball找到Paddle引用\r\n                const ballScript = this._ballNode.getComponent('EnhancedBall') || this._ballNode.getComponent('Ball');\r\n                if (ballScript && typeof (ballScript as any).setPaddleReference === 'function') {\r\n                    (ballScript as any).setPaddleReference(this._paddleNode);\r\n                }\r\n            } else {\r\n                console.error('Failed to instantiate ball prefab');\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.error('Error creating ball based on paddle:', error);\r\n        }\r\n    }\r\n\r\n    private createBall(): void {\r\n        try {\r\n            if (!this.ballPrefab) {\r\n                console.warn('Ball prefab not assigned - skipping ball creation');\r\n                return;\r\n            }\r\n            \r\n            this._ballNode = instantiate(this.ballPrefab);\r\n            if (this._ballNode) {\r\n                this._ballNode.setPosition(0, -250, 0); // 与跟随逻辑一致：-300 + 50 = -250\r\n                // 将Ball添加到Canvas下，而不是GameManager下\r\n                const canvas = this.node.parent;\r\n                if (canvas) {\r\n                    canvas.addChild(this._ballNode);\r\n                    console.log('Ball created successfully and added to Canvas');\r\n                } else {\r\n                    this.node.addChild(this._ballNode);\r\n                    console.log('Ball created successfully and added to GameManager');\r\n                }\r\n            } else {\r\n                console.error('Failed to instantiate ball prefab');\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.error('Error creating ball:', error);\r\n        }\r\n    }\r\n\r\n    private createBoundaryWalls(): void {\r\n        try {\r\n            if (!this.wallPrefab) {\r\n                console.warn('Wall prefab not assigned - skipping boundary creation');\r\n                return;\r\n            }\r\n\r\n            // Screen boundaries for 640x960 portrait: left=-320, right=+320, top=+480, bottom=-480\r\n            const canvas = this.node.parent;\r\n            const parentNode = canvas || this.node;\r\n            \r\n            // Left wall\r\n            const leftWall = instantiate(this.wallPrefab);\r\n            leftWall.setPosition(-325, 0, 0); // 竖屏左边界\r\n            leftWall.setScale(1, 10, 1); // 高一些适应竖屏\r\n            const leftSprite = leftWall.getComponent(Sprite);\r\n            if (leftSprite) {\r\n                leftSprite.color = new Color(255, 0, 0, 128);\r\n            }\r\n            parentNode.addChild(leftWall);\r\n\r\n            // Right wall  \r\n            const rightWall = instantiate(this.wallPrefab);\r\n            rightWall.setPosition(325, 0, 0); // 竖屏右边界\r\n            rightWall.setScale(1, 10, 1);\r\n            const rightSprite = rightWall.getComponent(Sprite);\r\n            if (rightSprite) {\r\n                rightSprite.color = new Color(255, 0, 0, 128);\r\n            }\r\n            parentNode.addChild(rightWall);\r\n\r\n            // Top wall\r\n            const topWall = instantiate(this.wallPrefab);\r\n            topWall.setPosition(0, 485, 0); // 竖屏上边界\r\n            topWall.setScale(7, 1, 1); // 宽一些覆盖竖屏宽度\r\n            const topSprite = topWall.getComponent(Sprite);\r\n            if (topSprite) {\r\n                topSprite.color = new Color(0, 255, 0, 128);\r\n            }\r\n            parentNode.addChild(topWall);\r\n\r\n            // Bottom wall\r\n            const bottomWall = instantiate(this.wallPrefab);\r\n            bottomWall.setPosition(0, -485, 0); // 竖屏下边界\r\n            bottomWall.setScale(7, 1, 1);\r\n            const bottomSprite = bottomWall.getComponent(Sprite);\r\n            if (bottomSprite) {\r\n                bottomSprite.color = new Color(0, 0, 255, 128);\r\n            }\r\n            parentNode.addChild(bottomWall);\r\n\r\n            console.log('Boundary walls created successfully');\r\n        } catch (error) {\r\n            console.error('Error creating boundary walls:', error);\r\n        }\r\n    }\r\n\r\n    /*\r\n    private createDebugPanel(): void {\r\n        try {\r\n            // 创建调试面板节点\r\n            const debugNode = new Node('RuntimeDebugPanel');\r\n            const debugPanel = debugNode.addComponent(RuntimeDebugPanel);\r\n            \r\n            // 添加到Canvas下，确保在UI层次结构中\r\n            const canvas = this.node.parent;\r\n            if (canvas) {\r\n                canvas.addChild(debugNode);\r\n                console.log('✅ Runtime debug panel created and added to Canvas');\r\n            } else {\r\n                this.node.addChild(debugNode);\r\n                console.log('✅ Runtime debug panel created and added to GameManager');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error creating debug panel:', error);\r\n        }\r\n    }\r\n    */\r\n\r\n    private launchBall(): void {\r\n        if (this._ballNode) {\r\n            const ballScript = this._ballNode.getComponent('EnhancedBall') || this._ballNode.getComponent('Ball');\r\n            if (ballScript && typeof (ballScript as any).launch === 'function') {\r\n                (ballScript as any).launch();\r\n                console.log('Ball launched after physics initialization');\r\n            } else {\r\n                console.warn('Ball script not found or launch method not available');\r\n            }\r\n        } else {\r\n            console.warn('Ball node not found, cannot launch');\r\n        }\r\n    }\r\n\r\n    private setupLevel(): void {\r\n        console.log(`🎯 SetupLevel called - Level ${this.level}`);\r\n\r\n        // 计算当前关卡难度\r\n        this._currentDifficulty = DifficultyCalculator.calculateDifficulty(this.level);\r\n        this._brickDistribution = DifficultyCalculator.getBrickDistribution();\r\n\r\n        console.log('📊 Difficulty config:', DifficultyCalculator.formatConfig(this._currentDifficulty));\r\n\r\n        // 清除旧砖块\r\n        this.clearBricks();\r\n\r\n        // 使用新的布局生成系统\r\n        const brickData = LayoutGenerator.generateLayout(this._currentDifficulty);\r\n        this.createBricksFromData(brickData);\r\n    }\r\n\r\n    /**\r\n     * 从BrickData数组创建砖块 - 替代旧的createBricksFromLayout\r\n     */\r\n    private createBricksFromData(brickDataArray: BrickData[]): void {\r\n        if (!this.brickPrefab || !this.brickContainer || !this._currentDifficulty) {\r\n            console.error('Missing prefab, container, or difficulty config');\r\n            return;\r\n        }\r\n\r\n        const config = this._currentDifficulty;\r\n\r\n        // 基于真实砖块尺寸计算布局\r\n        const wallInnerBoundary = 310; // 墙壁内边界 (325 wall - 15 safety margin)\r\n        const actualBrickWidth = 80 * 0.625;  // 50像素实际宽度\r\n        const actualBrickHeight = 30 * 0.625; // 18.75像素实际高度\r\n        const spacing = 4;  // 间距\r\n\r\n        // 计算可用宽度和实际可放置的列数\r\n        const availableWidth = wallInnerBoundary * 2; // 左右各310，总共620\r\n        let finalCols = config.gridCols;\r\n        let finalTotalWidth = finalCols * actualBrickWidth + (finalCols - 1) * spacing;\r\n\r\n        // 如果砖块网格超出边界，减少列数\r\n        while (finalTotalWidth > availableWidth && finalCols > 1) {\r\n            finalCols--;\r\n            finalTotalWidth = finalCols * actualBrickWidth + (finalCols - 1) * spacing;\r\n        }\r\n\r\n        // 过滤掉超出列数的砖块\r\n        const filteredBricks = finalCols < config.gridCols\r\n            ? brickDataArray.filter(brick => brick.col < finalCols)\r\n            : brickDataArray;\r\n\r\n        const startX = -finalTotalWidth / 2 + actualBrickWidth / 2;\r\n        const startY = 300;\r\n\r\n        console.log(`📦 Creating ${filteredBricks.length} bricks from ${config.gridRows}x${finalCols} grid (available width: ${availableWidth}, used: ${finalTotalWidth.toFixed(1)})`);\r\n\r\n        // 应用难度系统: 随机分配特殊砖块类型\r\n        this.applyDifficultyToBricks(filteredBricks);\r\n\r\n        for (const data of filteredBricks) {\r\n            const brick = instantiate(this.brickPrefab);\r\n            const x = startX + data.col * (actualBrickWidth + spacing);\r\n            const y = startY - data.row * (actualBrickHeight + spacing);\r\n\r\n            brick.setPosition(x, y, 0);\r\n            brick.setScale(0.625, 0.625, 1);\r\n\r\n            // 配置砖块类型和生命值\r\n            const brickScript = brick.getComponent('EnhancedBrick') || brick.getComponent('Brick');\r\n            if (brickScript) {\r\n                // 先设置类型\r\n                (brickScript as any).brickType = data.type;\r\n\r\n                // 调用initializeBrickType初始化颜色和默认属性\r\n                if (typeof (brickScript as any).initializeBrickType === 'function') {\r\n                    (brickScript as any).initializeBrickType();\r\n                }\r\n\r\n                // 检查是否需要覆盖生命值 (只覆盖不硬编码生命值的类型)\r\n                const typesWithHardcodedHealth = [1, 5, 14, 21]; // REINFORCED, REGENERATING, SHIELD, METAL\r\n                if (!typesWithHardcodedHealth.includes(data.type)) {\r\n                    // 对于其他类型，使用难度系统计算的生命值\r\n                    (brickScript as any).health = data.health;\r\n                    (brickScript as any)._maxHealth = data.health;\r\n                }\r\n            }\r\n\r\n            this.brickContainer.addChild(brick);\r\n            this._bricks.push(brick);\r\n        }\r\n\r\n        console.log(`✅ Created ${this._bricks.length} bricks successfully`);\r\n    }\r\n\r\n    /**\r\n     * 应用难度配置到砖块数据 - 根据概率分配特殊砖块类型\r\n     */\r\n    private applyDifficultyToBricks(brickDataArray: BrickData[]): void {\r\n        if (!this._currentDifficulty || !this._brickDistribution) return;\r\n\r\n        const config = this._currentDifficulty;\r\n        const dist = this._brickDistribution;\r\n\r\n        // 记录已使用的reactive砖块位置\r\n        const reactiveBricks: { row: number, col: number }[] = [];\r\n\r\n        for (const brick of brickDataArray) {\r\n            let finalType = brick.type;\r\n\r\n            // 1. 检查是否应该是有益砖块\r\n            if (Math.random() < config.beneficialBrickChance) {\r\n                finalType = DifficultyCalculator.selectBrickTypeByWeight(\r\n                    dist.beneficial.types,\r\n                    dist.beneficial.weights\r\n                );\r\n            }\r\n            // 2. 检查是否应该是减益砖块\r\n            else if (Math.random() < config.harmfulBrickChance) {\r\n                finalType = DifficultyCalculator.selectBrickTypeByWeight(\r\n                    dist.harmful.types,\r\n                    dist.harmful.weights\r\n                );\r\n            }\r\n            // 3. 检查是否应该是爆炸性砖块\r\n            else if (Math.random() < dist.reactive.chance) {\r\n                // 检查与其他reactive砖块的距离\r\n                let tooClose = false;\r\n                for (const pos of reactiveBricks) {\r\n                    const distance = Math.abs(brick.row - pos.row) + Math.abs(brick.col - pos.col);\r\n                    if (distance < dist.reactive.minDistance) {\r\n                        tooClose = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!tooClose) {\r\n                    finalType = dist.reactive.types[Math.floor(Math.random() * dist.reactive.types.length)];\r\n                    reactiveBricks.push({ row: brick.row, col: brick.col });\r\n                }\r\n            }\r\n\r\n            brick.type = finalType;\r\n        }\r\n\r\n        console.log(`🎲 Applied difficulty: ${reactiveBricks.length} reactive bricks placed`);\r\n    }\r\n\r\n    /**\r\n     * 公开方法 - 供DevTools调用，加载指定关卡\r\n     */\r\n    public loadLevel(level: number, customConfig?: DifficultyConfig): void {\r\n        console.log(`🔄 Loading level ${level}${customConfig ? ' with custom config' : ''}`);\r\n\r\n        this.level = level;\r\n\r\n        if (customConfig) {\r\n            this._currentDifficulty = customConfig;\r\n        }\r\n\r\n        this.setupLevel();\r\n    }\r\n\r\n    private getLevelLayout(level: number): number[][] {\r\n        // 已废弃 - 保留用于向后兼容\r\n        // 更多砖块：从8x4增加到12x6，提升内容密度\r\n        const basicLayout = [\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\r\n        ];\r\n\r\n        if (level > 1) {\r\n            for (let row = 0; row < basicLayout.length; row++) {\r\n                for (let col = 0; col < basicLayout[row].length; col++) {\r\n                    if (Math.random() < 0.3) {\r\n                        basicLayout[row][col] = 2;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return basicLayout;\r\n    }\r\n\r\n    private createBricksFromLayout(layout: number[][]): void {\r\n        if (!this.brickPrefab || !this.brickContainer) return;\r\n\r\n        // 基于真实砖块尺寸计算布局 - 消除缩放特殊情况\r\n        const wallInnerBoundary = 320; // 墙壁内边界 (325-5)\r\n        const actualBrickWidth = 80 * 0.625;  // 50像素实际宽度\r\n        const actualBrickHeight = 40 * 0.625; // 25像素实际高度\r\n        const spacing = 4;  // 减小间距适应更多砖块\r\n        \r\n        const cols = layout[0] ? layout[0].length : 0;\r\n        const totalBrickArea = cols * actualBrickWidth + (cols - 1) * spacing;\r\n        \r\n        // 如果12列太宽，减少到10列\r\n        let finalCols = cols;\r\n        let finalLayout = layout;\r\n        \r\n        if (totalBrickArea > wallInnerBoundary * 2) {\r\n            console.log(`12列太宽(${totalBrickArea})，减少到10列`);\r\n            finalCols = 10;\r\n            finalLayout = layout.map(row => row.slice(0, 10)); // 截取前10列\r\n        }\r\n        \r\n        const finalTotalWidth = finalCols * actualBrickWidth + (finalCols - 1) * spacing;\r\n        const startX = -finalTotalWidth / 2 + actualBrickWidth / 2;\r\n        const startY = 300;\r\n        \r\n        console.log(`Creating ${finalLayout.length}x${finalCols} brick grid, total width: ${finalTotalWidth.toFixed(1)}, wall boundary: ±${wallInnerBoundary}`);\r\n\r\n        for (let row = 0; row < finalLayout.length; row++) {\r\n            for (let col = 0; col < finalCols; col++) {\r\n                const brickType = finalLayout[row][col];\r\n                if (brickType === 0) continue;\r\n\r\n                const brick = instantiate(this.brickPrefab);\r\n                const x = startX + col * (actualBrickWidth + spacing);\r\n                const y = startY - row * (actualBrickHeight + spacing);\r\n                \r\n                brick.setPosition(x, y, 0);\r\n                \r\n                // 缩放砖块到新尺寸\r\n                brick.setScale(0.625, 0.625, 1);\r\n                \r\n                // Use EnhancedBrick component with programmatic types\r\n                const brickScript = brick.getComponent('EnhancedBrick') || brick.getComponent('Brick');\r\n                if (brickScript) {\r\n                    // Convert layout value to diverse brick types\r\n                    const enhancedBrickType = this.getBrickTypeFromValue(brickType, row, col);\r\n                    \r\n                    if ((brickScript as any).brickType !== undefined) {\r\n                        // EnhancedBrick system\r\n                        (brickScript as any).brickType = enhancedBrickType;\r\n                        // Trigger initialization after type assignment\r\n                        if ((brickScript as any).initializeBrickType) {\r\n                            (brickScript as any).initializeBrickType();\r\n                        }\r\n                    } else {\r\n                        // Legacy Brick system fallback\r\n                        (brickScript as any).setHealth(brickType);\r\n                    }\r\n                    \r\n                    // Some bricks drop experience orbs\r\n                    if (Math.random() < 0.1) { // 10% chance\r\n                        (brickScript as any).setDropsExperience && (brickScript as any).setDropsExperience(true);\r\n                    }\r\n                }\r\n\r\n                this.brickContainer.addChild(brick);\r\n                this._bricks.push(brick);\r\n            }\r\n        }\r\n        \r\n        console.log(`Created ${this._bricks.length} bricks with diverse types`);\r\n    }\r\n    \r\n    /**\r\n     * Convert layout value to enhanced brick type with strategic diversity\r\n     * 为每个砖块分配有意义的类型，而不是简单的随机化\r\n     */\r\n    private getBrickTypeFromValue(layoutValue: number, row: number, col: number): number {\r\n        // Import BrickType enum values  \r\n        const BrickType = {\r\n            NORMAL: 0, REINFORCED: 1, EXPLOSIVE: 2, ELECTRIC: 3, EXPERIENCE: 4,\r\n            REGENERATING: 5, PHASE: 6, MAGNETIC: 7, REFLECTIVE: 8, POISON: 9,\r\n            ICE: 10, FIRE: 11, SPLITTING: 12, TELEPORT: 13, SHIELD: 14,\r\n            GRAVITY: 15, TIME: 16, HEALING: 17, CURSED: 18, CRYSTAL: 19,\r\n            RUBBER: 20, METAL: 21, VOID: 22, LIGHT: 23, DARK: 24\r\n        };\r\n        \r\n        // Strategic brick placement based on position and level\r\n        const totalPositions = (row * 8 + col); // Unique position identifier\r\n        const levelDifficulty = this.level;\r\n        \r\n        // Base distribution: mostly normal bricks\r\n        if (layoutValue === 1) {\r\n            // Row-based strategy\r\n            switch (row) {\r\n                case 0: // Top row - defensive types\r\n                    if (col % 3 === 0) return BrickType.SHIELD;\r\n                    if (col % 4 === 1) return BrickType.REINFORCED;\r\n                    return BrickType.NORMAL;\r\n                    \r\n                case 1: // Second row - special effects\r\n                    if (col % 5 === 0) return BrickType.EXPLOSIVE;\r\n                    if (col % 5 === 2) return BrickType.ELECTRIC;\r\n                    if (col % 7 === 3) return BrickType.EXPERIENCE;\r\n                    return BrickType.NORMAL;\r\n                    \r\n                case 2: // Third row - element effects\r\n                    if (col % 4 === 0) return BrickType.FIRE;\r\n                    if (col % 4 === 2) return BrickType.ICE;\r\n                    if (col % 6 === 1) return BrickType.POISON;\r\n                    return BrickType.NORMAL;\r\n                    \r\n                default: // Bottom rows - utility and rare types\r\n                    if (col === 0 || col === 7) return BrickType.HEALING; // Corner healing\r\n                    if (totalPositions % 11 === 0) return BrickType.TELEPORT;\r\n                    if (totalPositions % 13 === 0) return BrickType.CRYSTAL;\r\n                    return BrickType.NORMAL;\r\n            }\r\n        }\r\n        \r\n        // Enhanced bricks for higher layout values\r\n        if (layoutValue === 2) {\r\n            const rareTypes = [\r\n                BrickType.GRAVITY, BrickType.TIME, BrickType.VOID, \r\n                BrickType.METAL, BrickType.PHASE, BrickType.MAGNETIC\r\n            ];\r\n            \r\n            // Add level scaling for rare types\r\n            if (levelDifficulty > 2) {\r\n                const typeIndex = (totalPositions + levelDifficulty) % rareTypes.length;\r\n                return rareTypes[typeIndex];\r\n            } else {\r\n                // Early levels: safer special types\r\n                const earlySpecial = [BrickType.REINFORCED, BrickType.EXPERIENCE, BrickType.HEALING];\r\n                return earlySpecial[totalPositions % earlySpecial.length];\r\n            }\r\n        }\r\n        \r\n        return BrickType.NORMAL;\r\n    }\r\n\r\n    private clearBricks(): void {\r\n        this._bricks.forEach(brick => {\r\n            if (brick && brick.isValid) {\r\n                brick.destroy();\r\n            }\r\n        });\r\n        this._bricks = [];\r\n    }\r\n\r\n    public onBrickDestroyed(scoreValue: number = 10, brickPosition?: Vec3, dropsExperience: boolean = false): void {\r\n        this.score += scoreValue;\r\n        \r\n        if (brickPosition) {\r\n            // Drop power-ups\r\n            if (Math.random() < this.powerUpDropChance) {\r\n                this.dropPowerUp(brickPosition);\r\n            }\r\n            \r\n            // Drop experience orbs\r\n            if (dropsExperience) {\r\n                this.dropExperienceOrb(brickPosition);\r\n            }\r\n        }\r\n        \r\n        this._bricks = this._bricks.filter(brick => brick && brick.isValid);\r\n        \r\n        if (this._bricks.length === 0) {\r\n            this.checkLevelComplete();\r\n        }\r\n    }\r\n\r\n    private dropPowerUp(position: Vec3): void {\r\n        const powerUps = [this.multiBallPowerUpPrefab, this.laserPaddlePowerUpPrefab];\r\n        const availablePowerUps = powerUps.filter(prefab => prefab !== null);\r\n        \r\n        if (availablePowerUps.length === 0) return;\r\n        \r\n        const randomPowerUp = availablePowerUps[Math.floor(Math.random() * availablePowerUps.length)];\r\n        if (randomPowerUp) {\r\n            const powerUpNode = instantiate(randomPowerUp);\r\n            powerUpNode.setPosition(position);\r\n            \r\n            // Add to Canvas for consistent coordinate system\r\n            const canvas = this.node.parent;\r\n            if (canvas) {\r\n                canvas.addChild(powerUpNode);\r\n                console.log('PowerUp dropped and added to Canvas');\r\n            } else {\r\n                this.node.addChild(powerUpNode);\r\n                console.log('PowerUp dropped and added to GameManager');\r\n            }\r\n        }\r\n    }\r\n\r\n    public onBallLost(): void {\r\n        this.lives--;\r\n        \r\n        // Ball hitting core also deals damage\r\n        if (this._coreController) {\r\n            this._coreController.takeDamage(1, 'Ball lost');\r\n        }\r\n        \r\n        if (this.lives <= 0) {\r\n            this.setState(GameState.GAME_OVER);\r\n        } else {\r\n            this.resetBall();\r\n        }\r\n    }\r\n    \r\n    public onCoreAttacked(damage: number): void {\r\n        console.log(`Core attacked for ${damage} damage`);\r\n        \r\n        if (this._coreController) {\r\n            this._coreController.takeDamage(damage, 'External attack');\r\n        }\r\n    }\r\n    \r\n    public onCoreDestroyed(): void {\r\n        console.log('Core destroyed! Immediate game over!');\r\n        this.lives = 0;\r\n        this.setState(GameState.GAME_OVER);\r\n    }\r\n    \r\n    public onBossDefeated(scoreValue: number): void {\r\n        console.log(`Boss defeated! Awarded ${scoreValue} points`);\r\n        this.score += scoreValue;\r\n        \r\n        // Boss defeat triggers level completion\r\n        this.onLevelComplete();\r\n    }\r\n    \r\n    private dropExperienceOrb(position: Vec3): void {\r\n        if (!this.experienceOrbPrefab) return;\r\n        \r\n        const orbNode = instantiate(this.experienceOrbPrefab);\r\n        orbNode.setPosition(position);\r\n        this.node.addChild(orbNode);\r\n        console.log('Experience orb dropped');\r\n    }\r\n\r\n    private resetBall(): void {\r\n        if (this._ballNode) {\r\n            const ballScript = this._ballNode.getComponent('EnhancedBall') || this._ballNode.getComponent('Ball');\r\n            if (ballScript && typeof (ballScript as any).resetBall === 'function') {\r\n                (ballScript as any).resetBall();\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkLevelComplete(): void {\r\n        // 暂时简化：直接完成关卡，不检查Boss类型\r\n        this.onLevelComplete();\r\n        \r\n        /*\r\n        const levelType = this._levelManager ? this._levelManager.getCurrentLevelType() : LevelType.NORMAL;\r\n        \r\n        if (levelType === LevelType.BOSS) {\r\n            // Boss levels complete when boss is defeated (handled in onBossDefeated)\r\n            return;\r\n        }\r\n        \r\n        this.onLevelComplete();\r\n        */\r\n    }\r\n\r\n    public onLevelComplete(): void {\r\n        this.setState(GameState.LEVEL_COMPLETE);\r\n        this.level++;\r\n        \r\n        const relicManager = RelicManager.getInstance();\r\n        if (relicManager) {\r\n            relicManager.grantRandomRelic();\r\n        }\r\n        \r\n        // Reset level manager for next level\r\n        if (this._levelManager) {\r\n            this._levelManager.resetLevel();\r\n            this._levelManager.adjustDifficulty(this.level);\r\n        }\r\n        \r\n        this.scheduleOnce(() => {\r\n            this.setupLevel();\r\n            this.setState(GameState.PLAYING);\r\n        }, 3.0);\r\n    }\r\n\r\n    public setState(newState: GameState): void {\r\n        try {\r\n            if (!newState || typeof newState !== 'string') {\r\n                console.warn('Invalid game state:', newState);\r\n                return;\r\n            }\r\n\r\n            const validStates = Object.values(GameState);\r\n            if (!validStates.includes(newState as GameState)) {\r\n                console.warn('Unknown game state:', newState);\r\n                return;\r\n            }\r\n\r\n            const oldState = this._currentState;\r\n            this._currentState = newState;\r\n            \r\n            console.log(`Game State Changed: ${oldState} -> ${newState}`);\r\n            \r\n            // Handle state-specific logic\r\n            this.onStateChanged(oldState, newState);\r\n            \r\n        } catch (error) {\r\n            console.error('Error setting game state:', error);\r\n        }\r\n    }\r\n\r\n    private onStateChanged(_oldState: GameState, newState: GameState): void {\r\n        try {\r\n            switch (newState) {\r\n                case GameState.GAME_OVER:\r\n                    this.handleGameOver();\r\n                    break;\r\n                case GameState.LEVEL_COMPLETE:\r\n                    this.handleLevelComplete();\r\n                    break;\r\n                case GameState.PLAYING:\r\n                    this.handleGamePlaying();\r\n                    break;\r\n            }\r\n        } catch (error) {\r\n            console.warn('Error in state change handler:', error);\r\n        }\r\n    }\r\n\r\n    private handleGameOver(): void {\r\n        console.log('Game Over - cleaning up resources');\r\n        // Stop any ongoing animations or sounds\r\n        // Save final score if needed\r\n    }\r\n\r\n    private handleLevelComplete(): void {\r\n        console.log('Level Complete - preparing next level');\r\n        // Award experience, update progression\r\n    }\r\n\r\n    private handleGamePlaying(): void {\r\n        console.log('Game Playing - all systems active');\r\n        // Ensure all game systems are ready\r\n    }\r\n\r\n    public getCurrentState(): GameState {\r\n        return this._currentState;\r\n    }\r\n\r\n    public getBallPrefab(): Prefab | null {\r\n        return this.ballPrefab;\r\n    }\r\n\r\n    public getScore(): number {\r\n        return this.score;\r\n    }\r\n\r\n    public getLives(): number {\r\n        return this.lives;\r\n    }\r\n\r\n    public getLevel(): number {\r\n        return this.level;\r\n    }\r\n\r\n    // 添加测试期望的方法\r\n    public getBrickCount(): number {\r\n        return this._bricks.length;\r\n    }\r\n\r\n    public getBricks(): Node[] {\r\n        return this._bricks;\r\n    }\r\n\r\n    public getBallNode(): Node | null {\r\n        return this._ballNode;\r\n    }\r\n\r\n    public getPaddleNode(): Node | null {\r\n        return this._paddleNode;\r\n    }\r\n\r\n    public getCoreController(): CoreController | null {\r\n        return this._coreController;\r\n    }\r\n\r\n    public getLevelManager(): LevelManager | null {\r\n        return this._levelManager;\r\n    }\r\n\r\n    public getGameState(): GameState {\r\n        return this._currentState;\r\n    }\r\n\r\n    public addScore(points: number): void {\r\n        this.score += points;\r\n        console.log(`Score increased by ${points}. Total: ${this.score}`);\r\n    }\r\n\r\n    public decreaseLives(amount: number = 1): void {\r\n        this.lives = Math.max(0, this.lives - amount);\r\n        console.log(`Lives decreased by ${amount}. Remaining: ${this.lives}`);\r\n        \r\n        if (this.lives <= 0) {\r\n            this.setState(GameState.GAME_OVER);\r\n        }\r\n    }\r\n}"]}