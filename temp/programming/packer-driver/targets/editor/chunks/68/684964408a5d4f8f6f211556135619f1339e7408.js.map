{"version":3,"sources":["file:///D:/project/claudecode/wx/Cat_Journey/assets/scripts/core/PaddleController.ts"],"names":["_decorator","Component","input","Input","Vec3","UITransform","Canvas","Vec2","BoxCollider2D","Sprite","RigidBody2D","ccclass","property","PaddleController","_currentScale","_currentWidth","_boxCollider","_sprite","_rigidBody","_targetX","_currentVelocity","_dampingFactor","_maxSpeed","_canvasComponent","_uiTransform","_camera","_isTouching","_lastTouchX","_screenWidth","_fixedY","onLoad","getComponent","node","parent","cameraComponent","type","gravityScale","fixedRotation","linearDamping","angularDamping","linearVelocity","console","log","basePaddleWidth","position","x","y","updatePaddleSize","onEnable","on","EventType","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","MOUSE_MOVE","onMouseMove","onDisable","off","update","dt","currentPos","Math","abs","toFixed","velocity","newX","setPosition","z","moveLeft","deltaTime","getPosition","speed","clampedX","clampToScreenBounds","moveRight","leftBound","boundaryMargin","rightBound","max","min","event","touches","getTouches","length","touch","getLocationX","updatePaddlePosition","getLocation","screenPos","worldPos","screenToWorld","localPos","convertToNodeSpaceAR","isTouching","lastTouchX","screenWidth","value","size","width","height","basePaddleHeight","setScale","setPaddleScale","scale","enlargePaddle","multiplier","shrinkPaddle","resetPaddleSize","getCurrentWidth","getCurrentScale"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, input, Input, EventTouch, Vec3, UITransform, Canvas, Camera, Vec2, Touch, BoxCollider2D, Sprite, RigidBody2D } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PaddleController')\r\nexport class PaddleController extends Component {\r\n    @property\r\n    public speed: number = 300;\r\n    \r\n    @property\r\n    public basePaddleWidth: number = 120; // 基础宽度\r\n    \r\n    @property  \r\n    public basePaddleHeight: number = 24; // 基础高度\r\n    \r\n    @property\r\n    public boundaryMargin: number = 50;\r\n\r\n    @property\r\n    public moveSpeed: number = 500;\r\n\r\n    // 动态属性\r\n    private _currentScale: number = 1.0; // 当前缩放倍数\r\n    private _currentWidth: number = 120; // 当前实际宽度\r\n    private _boxCollider: BoxCollider2D | null = null;\r\n    private _sprite: Sprite | null = null;\r\n    private _rigidBody: RigidBody2D | null = null;\r\n    \r\n    // 惯性移动相关 - 添加重量感 (public for debugging)\r\n    public _targetX: number = 0;        // 目标X位置\r\n    public _currentVelocity: number = 0; // 当前速度\r\n    public _dampingFactor: number = 0.15; // 阻尼系数，控制惯性感\r\n    public _maxSpeed: number = 800;      // 最大移动速度\r\n    \r\n    private _canvasComponent: Canvas | null = null;\r\n    private _uiTransform: UITransform | null = null;\r\n    private _camera: Camera | null = null;\r\n    private _isTouching: boolean = false;\r\n    private _lastTouchX: number = 0;\r\n    private _screenWidth: number = 640; // 竖屏宽度640，不是960\r\n    private _fixedY: number = -300; // 固定的Y位置，防止被球推动\r\n    \r\n    protected onLoad(): void {\r\n        this._uiTransform = this.getComponent(UITransform);\r\n        this._canvasComponent = this.node.parent?.getComponent(Canvas) || null;\r\n        this._camera = this._canvasComponent?.cameraComponent || null;\r\n        \r\n        // 获取组件引用\r\n        this._boxCollider = this.getComponent(BoxCollider2D);\r\n        this._sprite = this.getComponent(Sprite);\r\n        this._rigidBody = this.getComponent(RigidBody2D);\r\n        \r\n        // 确保RigidBody2D配置正确 - 完全锁定物理\r\n        if (this._rigidBody) {\r\n            this._rigidBody.type = 2; // Kinematic - 不受物理影响\r\n            this._rigidBody.gravityScale = 0; // 无重力\r\n            this._rigidBody.fixedRotation = true; // 不旋转\r\n            this._rigidBody.linearDamping = 0; // 无阻尼\r\n            this._rigidBody.angularDamping = 0; // 无角阻尼\r\n            // 锁定Y轴速度\r\n            this._rigidBody.linearVelocity = new Vec2(0, 0);\r\n            console.log('Paddle RigidBody2D configured: Kinematic, fully locked');\r\n        }\r\n        \r\n        // 初始化尺寸\r\n        this._currentWidth = this.basePaddleWidth;\r\n        this._targetX = this.node.position.x; // 初始化目标位置\r\n        this._fixedY = this.node.position.y; // 记录初始Y位置\r\n        this.updatePaddleSize();\r\n    }\r\n\r\n    protected onEnable(): void {\r\n        input.on(Input.EventType.TOUCH_START, this.onTouchStart, this);\r\n        input.on(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        input.on(Input.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        input.on(Input.EventType.MOUSE_MOVE, this.onMouseMove, this);\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        input.off(Input.EventType.TOUCH_START, this.onTouchStart, this);\r\n        input.off(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        input.off(Input.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        input.off(Input.EventType.MOUSE_MOVE, this.onMouseMove, this);\r\n    }\r\n    \r\n    protected update(dt: number): void {\r\n        // 🔒 强制锁定Y轴位置，防止被球推动\r\n        const currentPos = this.node.position;\r\n        if (Math.abs(currentPos.y - this._fixedY) > 0.01) {\r\n            console.log(`⚠️ Paddle Y corrected: ${currentPos.y.toFixed(2)} -> ${this._fixedY}`);\r\n        }\r\n\r\n        // 🔒 如果有RigidBody，强制清除任何速度\r\n        if (this._rigidBody) {\r\n            const velocity = this._rigidBody.linearVelocity;\r\n            if (velocity && (Math.abs(velocity.x) > 0.01 || Math.abs(velocity.y) > 0.01)) {\r\n                console.log(`⚠️ Paddle velocity cleared: (${velocity.x.toFixed(2)}, ${velocity.y.toFixed(2)}) -> (0, 0)`);\r\n                this._rigidBody.linearVelocity = new Vec2(0, 0);\r\n            }\r\n        }\r\n\r\n        // 直接跟随鼠标位置 - 无惯性\r\n        const newX = this._targetX;\r\n        this.node.setPosition(newX, this._fixedY, currentPos.z);\r\n    }\r\n\r\n    // 测试需要的移动方法\r\n    public moveLeft(deltaTime: number): void {\r\n        const currentPos = this.node.getPosition();\r\n        const newX = currentPos.x - this.speed * deltaTime;\r\n        const clampedX = this.clampToScreenBounds(newX);\r\n        this.node.setPosition(clampedX, this._fixedY, currentPos.z);\r\n    }\r\n\r\n    public moveRight(deltaTime: number): void {\r\n        const currentPos = this.node.getPosition();\r\n        const newX = currentPos.x + this.speed * deltaTime;\r\n        const clampedX = this.clampToScreenBounds(newX);\r\n        this.node.setPosition(clampedX, this._fixedY, currentPos.z);\r\n    }\r\n\r\n    private clampToScreenBounds(x: number): number {\r\n        const leftBound = -(this._screenWidth / 2) + (this._currentWidth / 2) + this.boundaryMargin;\r\n        const rightBound = (this._screenWidth / 2) - (this._currentWidth / 2) - this.boundaryMargin;\r\n        return Math.max(leftBound, Math.min(rightBound, x));\r\n    }\r\n\r\n    private onTouchStart(event: EventTouch): void {\r\n        const touches = event.getTouches();\r\n        if (touches.length > 0) {\r\n            const touch = touches[0];\r\n            this._isTouching = true;\r\n            this._lastTouchX = touch.getLocationX();\r\n        }\r\n    }\r\n\r\n    private onTouchEnd(event: EventTouch): void {\r\n        this._isTouching = false;\r\n    }\r\n\r\n    private onTouchMove(event: EventTouch): void {\r\n        this.updatePaddlePosition(event.getLocation());\r\n    }\r\n\r\n    private onMouseMove(event: any): void {\r\n        this.updatePaddlePosition(event.getLocation());\r\n    }\r\n\r\n    private updatePaddlePosition(screenPos: Vec2): void {\r\n        if (!this._camera || !this._uiTransform) return;\r\n\r\n        const worldPos = this._camera.screenToWorld(new Vec3(screenPos.x, screenPos.y, 0));\r\n        const localPos = this.node.parent?.getComponent(UITransform)?.convertToNodeSpaceAR(worldPos) || worldPos;\r\n\r\n        // 设置目标位置而不是直接移动 - 添加惯性感\r\n        this._targetX = this.clampToScreenBounds(localPos.x);\r\n    }\r\n\r\n    // 公共访问器供测试使用\r\n    public get isTouching(): boolean {\r\n        return this._isTouching;\r\n    }\r\n\r\n    public get lastTouchX(): number {\r\n        return this._lastTouchX;\r\n    }\r\n\r\n    public get screenWidth(): number {\r\n        return this._screenWidth;\r\n    }\r\n\r\n    public set screenWidth(value: number) {\r\n        this._screenWidth = value;\r\n    }\r\n    \r\n    // ===== 动态尺寸管理系统 =====\r\n    \r\n    /**\r\n     * 更新paddle尺寸 - 同时更新精灵、碰撞器、边界计算\r\n     */\r\n    private updatePaddleSize(): void {\r\n        if (!this._boxCollider || !this._sprite) return;\r\n        \r\n        // 更新碰撞器尺寸\r\n        this._boxCollider.size.width = this.basePaddleWidth * this._currentScale;\r\n        this._boxCollider.size.height = this.basePaddleHeight * this._currentScale;\r\n        \r\n        // 更新精灵缩放 (保持原始精灵比例)\r\n        this.node.setScale(this._currentScale, this._currentScale, 1);\r\n        \r\n        // 更新当前宽度用于边界计算\r\n        this._currentWidth = this.basePaddleWidth * this._currentScale;\r\n        \r\n        console.log(`Paddle size updated: scale=${this._currentScale}, width=${this._currentWidth}`);\r\n    }\r\n    \r\n    /**\r\n     * 设置paddle缩放 - 道具效果调用\r\n     * @param scale 缩放倍数 (1.0=正常, 1.5=150%, 0.8=80%)\r\n     */\r\n    public setPaddleScale(scale: number): void {\r\n        this._currentScale = Math.max(0.3, Math.min(3.0, scale)); // 限制30%-300%\r\n        this.updatePaddleSize();\r\n    }\r\n    \r\n    /**\r\n     * 增加paddle尺寸 - 道具效果\r\n     * @param multiplier 倍数增量 (1.2=增加20%)\r\n     */\r\n    public enlargePaddle(multiplier: number = 1.3): void {\r\n        this.setPaddleScale(this._currentScale * multiplier);\r\n    }\r\n    \r\n    /**\r\n     * 缩小paddle尺寸 - 负面效果\r\n     * @param multiplier 倍数减量 (0.8=减少20%)\r\n     */\r\n    public shrinkPaddle(multiplier: number = 0.7): void {\r\n        this.setPaddleScale(this._currentScale * multiplier);\r\n    }\r\n    \r\n    /**\r\n     * 重置paddle到基础尺寸\r\n     */\r\n    public resetPaddleSize(): void {\r\n        this.setPaddleScale(1.0);\r\n    }\r\n    \r\n    /**\r\n     * 获取当前paddle实际宽度 - 供其他系统使用\r\n     */\r\n    public getCurrentWidth(): number {\r\n        return this._currentWidth;\r\n    }\r\n    \r\n    /**\r\n     * 获取当前缩放倍数\r\n     */\r\n    public getCurrentScale(): number {\r\n        return this._currentScale;\r\n    }\r\n}"]}