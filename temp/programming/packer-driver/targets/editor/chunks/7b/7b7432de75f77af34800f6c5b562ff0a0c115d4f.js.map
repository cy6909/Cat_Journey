{"version":3,"sources":["file:///E:/work_space/wx/Cat_Journey/assets/scripts/background/AbyssBackground.ts"],"names":["_decorator","Component","Sprite","SpriteFrame","Texture2D","Color","UITransform","view","Node","ParticleSystem2D","tween","Vec3","Vec2","ccclass","property","AbyssBackground","onLoad","createAbyssBackground","transform","node","getComponent","console","error","setupNodeSize","createAbyssGradient","createMechanicalStructure","createEnergySparkParticles","createDataStreams","createEnergyPipes","enableCatCharacter","createCyberCat","designSize","getDesignResolutionSize","targetWidth","Math","max","width","targetHeight","height","setContentSize","setAnchorPoint","gradientNode","setParent","layerTransform","addComponent","gradientTexture","createAbyssGradientTexture","sprite","spriteFrame","texture","sizeMode","SizeMode","CUSTOM","color","WHITE","w","floor","h","reset","format","PixelFormat","RGBA8888","data","Uint8Array","y","ratio","r","abyssStartColor","abyssEndColor","g","b","x","index","uploadData","structureNode","structureTexture","createMechanicalTexture","i","length","mechNoise","mechanicalNoise","particleNode","particleSystem","duration","emissionRate","life","startSize","endSize","startColor","endColor","gravity","speed","speedVar","angle","angleVar","startSpin","endSpin","startSpinVar","sparkTexture","createSparkTexture","size","centerX","centerY","dx","abs","dy","dataStreamCount","createSingleDataStream","streamNode","random","setPosition","streamTransform","createDataStreamTexture","startDataStreamAnimation","alpha","startY","endY","resetAndFall","to","position","call","start","mechanicalPipeCount","createSingleEnergyPipe","pipeNode","pipeTransform","createEnergyPipeTexture","startEnergyPipeAnimation","flow","sin","originalColor","clone","brightColor","repeatForever","catNode","setScale","catTransform","createCyberCatTexture","startCyberCatAnimation","isInCatShape","bodyRadius","distance","sqrt","n"],"mappings":"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","sourcesContent":["import { _decorator, Component, Sprite, SpriteFrame, Texture2D, Color, UITransform, view, Node, ParticleSystem2D, tween, Vec3, Vec2 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('AbyssBackground')\r\nexport class AbyssBackground extends Component {\r\n    @property\r\n    public energySparkCount: number = 25;\r\n    \r\n    @property\r\n    public dataStreamCount: number = 8;\r\n    \r\n    @property\r\n    public mechanicalPipeCount: number = 6;\r\n    \r\n    @property\r\n    public enableCatCharacter: boolean = true;\r\n    \r\n    // 深渊主题色彩配置\r\n    @property\r\n    public abyssStartColor: Color = new Color(76, 29, 149, 255); // #4C1D95 深紫\r\n    \r\n    @property\r\n    public abyssEndColor: Color = new Color(127, 29, 29, 255); // #7F1D1D 暗红\r\n\r\n    protected onLoad(): void {\r\n        this.createAbyssBackground();\r\n    }\r\n\r\n    private createAbyssBackground(): void {\r\n        const transform = this.node.getComponent(UITransform);\r\n        if (!transform) {\r\n            console.error('UITransform component not found');\r\n            return;\r\n        }\r\n\r\n        this.setupNodeSize(transform);\r\n\r\n        // 创建深渊主题分层背景\r\n        this.createAbyssGradient(transform);\r\n        this.createMechanicalStructure(transform);\r\n        this.createEnergySparkParticles(transform);\r\n        this.createDataStreams(transform);\r\n        this.createEnergyPipes(transform);\r\n        \r\n        if (this.enableCatCharacter) {\r\n            this.createCyberCat(transform);\r\n        }\r\n    }\r\n\r\n    private setupNodeSize(transform: UITransform): void {\r\n        const designSize = view.getDesignResolutionSize();\r\n        const targetWidth = Math.max(designSize.width, 960);\r\n        const targetHeight = Math.max(designSize.height, 640);\r\n        \r\n        transform.setContentSize(targetWidth, targetHeight);\r\n        transform.setAnchorPoint(0.5, 0.5);\r\n    }\r\n\r\n    private createAbyssGradient(transform: UITransform): void {\r\n        const gradientNode = new Node('AbyssGradient');\r\n        gradientNode.setParent(this.node);\r\n        \r\n        const layerTransform = gradientNode.addComponent(UITransform);\r\n        layerTransform.setContentSize(transform.width, transform.height);\r\n        layerTransform.setAnchorPoint(0.5, 0.5);\r\n        \r\n        const gradientTexture = this.createAbyssGradientTexture(transform.width, transform.height);\r\n        const sprite = gradientNode.addComponent(Sprite);\r\n        const spriteFrame = new SpriteFrame();\r\n        spriteFrame.texture = gradientTexture;\r\n        sprite.spriteFrame = spriteFrame;\r\n        sprite.sizeMode = Sprite.SizeMode.CUSTOM;\r\n        sprite.color = Color.WHITE;\r\n    }\r\n\r\n    private createAbyssGradientTexture(width: number, height: number): Texture2D {\r\n        const texture = new Texture2D();\r\n        const w = Math.max(1, Math.floor(width));\r\n        const h = Math.max(1, Math.floor(height));\r\n        \r\n        texture.reset({\r\n            width: w,\r\n            height: h,\r\n            format: Texture2D.PixelFormat.RGBA8888\r\n        });\r\n\r\n        const data = new Uint8Array(w * h * 4);\r\n        \r\n        for (let y = 0; y < h; y++) {\r\n            const ratio = y / h;\r\n            // 深渊渐变：上方深紫（深空），下方暗红（地狱）\r\n            const r = Math.floor(this.abyssStartColor.r + (this.abyssEndColor.r - this.abyssStartColor.r) * ratio);\r\n            const g = Math.floor(this.abyssStartColor.g + (this.abyssEndColor.g - this.abyssStartColor.g) * ratio);\r\n            const b = Math.floor(this.abyssStartColor.b + (this.abyssEndColor.b - this.abyssStartColor.b) * ratio);\r\n            \r\n            for (let x = 0; x < w; x++) {\r\n                const index = (y * w + x) * 4;\r\n                data[index] = r;     // R\r\n                data[index + 1] = g; // G\r\n                data[index + 2] = b; // B\r\n                data[index + 3] = 255; // A\r\n            }\r\n        }\r\n\r\n        texture.uploadData(data);\r\n        return texture;\r\n    }\r\n\r\n    private createMechanicalStructure(transform: UITransform): void {\r\n        const structureNode = new Node('MechanicalStructure');\r\n        structureNode.setParent(this.node);\r\n        \r\n        const layerTransform = structureNode.addComponent(UITransform);\r\n        layerTransform.setContentSize(transform.width, transform.height);\r\n        layerTransform.setAnchorPoint(0.5, 0.5);\r\n        \r\n        const structureTexture = this.createMechanicalTexture(transform.width, transform.height);\r\n        const sprite = structureNode.addComponent(Sprite);\r\n        const spriteFrame = new SpriteFrame();\r\n        spriteFrame.texture = structureTexture;\r\n        sprite.spriteFrame = spriteFrame;\r\n        sprite.sizeMode = Sprite.SizeMode.CUSTOM;\r\n        sprite.color = new Color(255, 255, 255, 100); // 半透明\r\n    }\r\n\r\n    private createMechanicalTexture(width: number, height: number): Texture2D {\r\n        const texture = new Texture2D();\r\n        const w = Math.max(1, Math.floor(width));\r\n        const h = Math.max(1, Math.floor(height));\r\n        \r\n        texture.reset({\r\n            width: w,\r\n            height: h,\r\n            format: Texture2D.PixelFormat.RGBA8888\r\n        });\r\n\r\n        const data = new Uint8Array(w * h * 4);\r\n        \r\n        // 初始化为透明\r\n        for (let i = 0; i < data.length; i += 4) {\r\n            data[i + 3] = 0; // 透明\r\n        }\r\n\r\n        // 绘制机械结构 - 网格和管道\r\n        for (let y = 0; y < h; y++) {\r\n            for (let x = 0; x < w; x++) {\r\n                const index = (y * w + x) * 4;\r\n                \r\n                // 垂直网格线\r\n                if (x % 60 === 0 || x % 60 === 1) {\r\n                    data[index] = 100;     // R\r\n                    data[index + 1] = 100; // G\r\n                    data[index + 2] = 120; // B\r\n                    data[index + 3] = 150; // A\r\n                }\r\n                \r\n                // 水平网格线\r\n                if (y % 80 === 0 || y % 80 === 1) {\r\n                    data[index] = 100;     // R\r\n                    data[index + 1] = 100; // G\r\n                    data[index + 2] = 120; // B\r\n                    data[index + 3] = 150; // A\r\n                }\r\n                \r\n                // 添加一些机械纹理噪声\r\n                const mechNoise = this.mechanicalNoise(x * 0.05, y * 0.05);\r\n                if (mechNoise > 0.7) {\r\n                    data[index] = 80;      // R\r\n                    data[index + 1] = 80;  // G\r\n                    data[index + 2] = 100; // B\r\n                    data[index + 3] = 100; // A\r\n                }\r\n            }\r\n        }\r\n\r\n        texture.uploadData(data);\r\n        return texture;\r\n    }\r\n\r\n    private createEnergySparkParticles(transform: UITransform): void {\r\n        const particleNode = new Node('EnergySparkParticles');\r\n        particleNode.setParent(this.node);\r\n        \r\n        const layerTransform = particleNode.addComponent(UITransform);\r\n        layerTransform.setContentSize(transform.width, transform.height);\r\n        layerTransform.setAnchorPoint(0.5, 0.5);\r\n        \r\n        const particleSystem = particleNode.addComponent(ParticleSystem2D);\r\n        \r\n        // 配置能量火花效果\r\n        particleSystem.duration = -1; // 持续发射\r\n        particleSystem.emissionRate = 4;\r\n        particleSystem.life = 6;\r\n        particleSystem.startSize = 3;\r\n        particleSystem.endSize = 1;\r\n        particleSystem.startColor = new Color(255, 50, 100, 255); // 红色火花\r\n        particleSystem.endColor = new Color(150, 50, 255, 100);   // 紫色\r\n        \r\n        // 浮动运动\r\n        particleSystem.gravity = new Vec2(0, 10);\r\n        particleSystem.speed = 25;\r\n        particleSystem.speedVar = 15;\r\n        particleSystem.angle = 90;\r\n        particleSystem.angleVar = 360;\r\n        \r\n        // 旋转效果\r\n        particleSystem.startSpin = 0;\r\n        particleSystem.endSpin = 720;\r\n        particleSystem.startSpinVar = 360;\r\n        \r\n        // 创建火花纹理\r\n        const sparkTexture = this.createSparkTexture();\r\n        const spriteFrame = new SpriteFrame();\r\n        spriteFrame.texture = sparkTexture;\r\n        particleSystem.spriteFrame = spriteFrame;\r\n    }\r\n\r\n    private createSparkTexture(): Texture2D {\r\n        const texture = new Texture2D();\r\n        const size = 4;\r\n        \r\n        texture.reset({\r\n            width: size,\r\n            height: size,\r\n            format: Texture2D.PixelFormat.RGBA8888\r\n        });\r\n\r\n        const data = new Uint8Array(size * size * 4);\r\n        \r\n        // 绘制菱形火花\r\n        for (let y = 0; y < size; y++) {\r\n            for (let x = 0; x < size; x++) {\r\n                const centerX = size / 2;\r\n                const centerY = size / 2;\r\n                const dx = Math.abs(x - centerX);\r\n                const dy = Math.abs(y - centerY);\r\n                \r\n                if (dx + dy <= size / 2) {\r\n                    const index = (y * size + x) * 4;\r\n                    data[index] = 255;     // R\r\n                    data[index + 1] = 100; // G\r\n                    data[index + 2] = 150; // B\r\n                    data[index + 3] = 255; // A\r\n                }\r\n            }\r\n        }\r\n\r\n        texture.uploadData(data);\r\n        return texture;\r\n    }\r\n\r\n    private createDataStreams(transform: UITransform): void {\r\n        for (let i = 0; i < this.dataStreamCount; i++) {\r\n            this.createSingleDataStream(transform, i);\r\n        }\r\n    }\r\n\r\n    private createSingleDataStream(transform: UITransform, index: number): void {\r\n        const streamNode = new Node(`DataStream_${index}`);\r\n        streamNode.setParent(this.node);\r\n        \r\n        // 数据流位置 - 垂直移动\r\n        const x = (Math.random() - 0.5) * transform.width * 0.9;\r\n        const y = transform.height * 0.5;\r\n        streamNode.setPosition(x, y, 0);\r\n        \r\n        const streamTransform = streamNode.addComponent(UITransform);\r\n        streamTransform.setContentSize(2, 100);\r\n        streamTransform.setAnchorPoint(0.5, 0.5);\r\n        \r\n        const sprite = streamNode.addComponent(Sprite);\r\n        const spriteFrame = new SpriteFrame();\r\n        spriteFrame.texture = this.createDataStreamTexture();\r\n        sprite.spriteFrame = spriteFrame;\r\n        sprite.sizeMode = Sprite.SizeMode.CUSTOM;\r\n        sprite.color = new Color(0, 255, 100, 200); // 绿色数据流\r\n        \r\n        // 添加下降动画\r\n        this.startDataStreamAnimation(streamNode, transform);\r\n    }\r\n\r\n    private createDataStreamTexture(): Texture2D {\r\n        const texture = new Texture2D();\r\n        const w = 2;\r\n        const h = 20;\r\n        \r\n        texture.reset({\r\n            width: w,\r\n            height: h,\r\n            format: Texture2D.PixelFormat.RGBA8888\r\n        });\r\n\r\n        const data = new Uint8Array(w * h * 4);\r\n        \r\n        // 创建垂直线条\r\n        for (let y = 0; y < h; y++) {\r\n            for (let x = 0; x < w; x++) {\r\n                const index = (y * w + x) * 4;\r\n                const alpha = Math.random() > 0.3 ? 255 : 0; // 随机间断\r\n                \r\n                data[index] = 0;       // R\r\n                data[index + 1] = 255; // G\r\n                data[index + 2] = 100; // B\r\n                data[index + 3] = alpha; // A\r\n            }\r\n        }\r\n\r\n        texture.uploadData(data);\r\n        return texture;\r\n    }\r\n\r\n    private startDataStreamAnimation(streamNode: Node, transform: UITransform): void {\r\n        const startY = transform.height * 0.6;\r\n        const endY = -transform.height * 0.6;\r\n        \r\n        // 重置位置并开始下降\r\n        const resetAndFall = () => {\r\n            streamNode.setPosition(\r\n                (Math.random() - 0.5) * transform.width * 0.9,\r\n                startY,\r\n                0\r\n            );\r\n            \r\n            tween(streamNode)\r\n                .to(8 + Math.random() * 4, { position: new Vec3(streamNode.position.x, endY, 0) })\r\n                .call(resetAndFall)\r\n                .start();\r\n        };\r\n        \r\n        resetAndFall();\r\n    }\r\n\r\n    private createEnergyPipes(transform: UITransform): void {\r\n        for (let i = 0; i < this.mechanicalPipeCount; i++) {\r\n            this.createSingleEnergyPipe(transform, i);\r\n        }\r\n    }\r\n\r\n    private createSingleEnergyPipe(transform: UITransform, index: number): void {\r\n        const pipeNode = new Node(`EnergyPipe_${index}`);\r\n        pipeNode.setParent(this.node);\r\n        \r\n        // 能量管道位置 - 水平分布\r\n        const x = -transform.width * 0.4 + (index / this.mechanicalPipeCount) * transform.width * 0.8;\r\n        const y = (Math.random() - 0.5) * transform.height * 0.4;\r\n        pipeNode.setPosition(x, y, 0);\r\n        \r\n        const pipeTransform = pipeNode.addComponent(UITransform);\r\n        pipeTransform.setContentSize(100, 8);\r\n        pipeTransform.setAnchorPoint(0.5, 0.5);\r\n        \r\n        const sprite = pipeNode.addComponent(Sprite);\r\n        const spriteFrame = new SpriteFrame();\r\n        spriteFrame.texture = this.createEnergyPipeTexture();\r\n        sprite.spriteFrame = spriteFrame;\r\n        sprite.sizeMode = Sprite.SizeMode.CUSTOM;\r\n        sprite.color = new Color(255, 100, 50, 180); // 橙红色管道\r\n        \r\n        // 添加脉动动画\r\n        this.startEnergyPipeAnimation(pipeNode);\r\n    }\r\n\r\n    private createEnergyPipeTexture(): Texture2D {\r\n        const texture = new Texture2D();\r\n        const w = 20;\r\n        const h = 4;\r\n        \r\n        texture.reset({\r\n            width: w,\r\n            height: h,\r\n            format: Texture2D.PixelFormat.RGBA8888\r\n        });\r\n\r\n        const data = new Uint8Array(w * h * 4);\r\n        \r\n        // 创建管道纹理\r\n        for (let y = 0; y < h; y++) {\r\n            for (let x = 0; x < w; x++) {\r\n                const index = (y * w + x) * 4;\r\n                \r\n                // 管道边缘\r\n                if (y === 0 || y === h - 1) {\r\n                    data[index] = 150;     // R\r\n                    data[index + 1] = 150; // G\r\n                    data[index + 2] = 150; // B\r\n                    data[index + 3] = 255; // A\r\n                } else {\r\n                    // 管道内部 - 能量流\r\n                    const flow = Math.sin(x * 0.5) * 0.5 + 0.5;\r\n                    data[index] = Math.floor(255 * flow);     // R\r\n                    data[index + 1] = Math.floor(100 * flow); // G\r\n                    data[index + 2] = Math.floor(50 * flow);  // B\r\n                    data[index + 3] = 200; // A\r\n                }\r\n            }\r\n        }\r\n\r\n        texture.uploadData(data);\r\n        return texture;\r\n    }\r\n\r\n    private startEnergyPipeAnimation(pipeNode: Node): void {\r\n        const sprite = pipeNode.getComponent(Sprite);\r\n        if (sprite) {\r\n            const originalColor = sprite.color.clone();\r\n            const brightColor = new Color(255, 150, 100, 220);\r\n            \r\n            // 脉动效果\r\n            tween(sprite)\r\n                .repeatForever(\r\n                    tween()\r\n                        .to(1 + Math.random(), { color: brightColor })\r\n                        .to(1 + Math.random(), { color: originalColor })\r\n                )\r\n                .start();\r\n        }\r\n    }\r\n\r\n    private createCyberCat(transform: UITransform): void {\r\n        const catNode = new Node('CyberCat');\r\n        catNode.setParent(this.node);\r\n        \r\n        // 位置：左下角，不干扰游戏区域\r\n        catNode.setPosition(-350, -200, 0);\r\n        catNode.setScale(0.8, 0.8, 1);\r\n        \r\n        const catTransform = catNode.addComponent(UITransform);\r\n        catTransform.setContentSize(64, 64);\r\n        catTransform.setAnchorPoint(0.5, 0.5);\r\n        \r\n        const sprite = catNode.addComponent(Sprite);\r\n        const spriteFrame = new SpriteFrame();\r\n        spriteFrame.texture = this.createCyberCatTexture();\r\n        sprite.spriteFrame = spriteFrame;\r\n        sprite.sizeMode = Sprite.SizeMode.CUSTOM;\r\n        sprite.color = Color.WHITE;\r\n        \r\n        // 添加待机动画\r\n        this.startCyberCatAnimation(catNode);\r\n    }\r\n\r\n    private createCyberCatTexture(): Texture2D {\r\n        const texture = new Texture2D();\r\n        const size = 32;\r\n        \r\n        texture.reset({\r\n            width: size,\r\n            height: size,\r\n            format: Texture2D.PixelFormat.RGBA8888\r\n        });\r\n\r\n        const data = new Uint8Array(size * size * 4);\r\n        \r\n        // 简化的赛博猫咪像素艺术（黑猫+霓虹边框）\r\n        for (let y = 0; y < size; y++) {\r\n            for (let x = 0; x < size; x++) {\r\n                const index = (y * size + x) * 4;\r\n                \r\n                // 基础形状：黑猫轮廓\r\n                if (this.isInCatShape(x, y, size)) {\r\n                    data[index] = 40;      // R - 暗色\r\n                    data[index + 1] = 40;  // G\r\n                    data[index + 2] = 60;  // B\r\n                    data[index + 3] = 255; // A\r\n                } else {\r\n                    data[index + 3] = 0; // 透明\r\n                }\r\n            }\r\n        }\r\n\r\n        texture.uploadData(data);\r\n        return texture;\r\n    }\r\n\r\n    private isInCatShape(x: number, y: number, size: number): boolean {\r\n        const centerX = size / 2;\r\n        const centerY = size / 2;\r\n        const dx = x - centerX;\r\n        const dy = y - centerY;\r\n        \r\n        // 简单的椭圆形作为猫咪身体\r\n        const bodyRadius = size * 0.3;\r\n        const distance = Math.sqrt(dx * dx + dy * dy);\r\n        \r\n        return distance < bodyRadius;\r\n    }\r\n\r\n    private startCyberCatAnimation(catNode: Node): void {\r\n        // 轻微的上下浮动（机械悬浮效果）\r\n        tween(catNode)\r\n            .repeatForever(\r\n                tween()\r\n                    .to(1.5, { position: new Vec3(-350, -190, 0) })\r\n                    .to(1.5, { position: new Vec3(-350, -210, 0) })\r\n            )\r\n            .start();\r\n        \r\n        // 霓虹发光效果\r\n        const sprite = catNode.getComponent(Sprite);\r\n        if (sprite) {\r\n            tween(sprite)\r\n                .repeatForever(\r\n                    tween()\r\n                        .to(2, { color: new Color(100, 255, 255, 255) }) // 青色发光\r\n                        .to(2, { color: new Color(255, 100, 255, 255) }) // 紫色发光\r\n                        .to(2, { color: Color.WHITE })\r\n                )\r\n                .start();\r\n        }\r\n    }\r\n\r\n    private mechanicalNoise(x: number, y: number): number {\r\n        // 机械专用噪声函数 - 创造电路板纹理\r\n        let n = Math.sin(x * 8.123 + y * 6.789) * 0.4;\r\n        n += Math.sin(x * 4.456 + y * 3.123) * 0.3;\r\n        n += Math.sin(x * 2.789 + y * 1.456) * 0.3;\r\n        return (n + 1) / 2; // 归一化到0-1\r\n    }\r\n}"]}