{"version":3,"sources":["file:///E:/work_space/wx/Cat_Journey/assets/scripts/core/Ball.ts"],"names":["_decorator","Component","RigidBody2D","Vec2","Collider2D","Contact2DType","ccclass","property","Ball","_rigidBody","isMoving","fireEffectDuration","iceEffectDuration","onLoad","getComponent","colliders","node","getComponents","forEach","collider","on","BEGIN_CONTACT","onBeginContact","console","log","start","launch","direction","velocity","x","y","normalized","normalize","initialSpeed","angle","Math","PI","random","cos","sin","linearVelocity","position","atan2","launchWithDefaultDirection","resetBall","setPosition","scheduleOnce","applyFireEffect","duration","applyIceEffect","hasFireEffect","hasIceEffect","getFireEffectDuration","getIceEffectDuration","_selfCollider","otherCollider","_contact","otherNode","name","onPaddleHit","paddleNode","abs","value","update","deltaTime","dt","speed","length","maxSpeed","multiplyScalar"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, RigidBody2D, Vec2, Collider2D, IPhysics2DContact, Contact2DType } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Ball')\r\nexport class Ball extends Component {\r\n    @property\r\n    public initialSpeed: number = 400;\r\n\r\n    @property\r\n    public maxSpeed: number = 600;\r\n\r\n    @property\r\n    public minSpeed: number = 100;\r\n\r\n    private _rigidBody: RigidBody2D | null = null;\r\n    public isMoving: boolean = false;\r\n    public fireEffectDuration: number = 0;\r\n    public iceEffectDuration: number = 0;\r\n\r\n    protected onLoad(): void {\r\n        this._rigidBody = this.getComponent(RigidBody2D);\r\n        \r\n        if (this._rigidBody) {\r\n            // 注册碰撞事件\r\n            const colliders = this.node.getComponents(Collider2D);\r\n            colliders.forEach(collider => {\r\n                collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            });\r\n            \r\n            // 设置刚体属性以实现无摩擦完美弹性碰撞\r\n            // 注意：材质需要在编辑器中或者通过其他方式设置\r\n            console.log('Ball initialized with collision detection');\r\n        }\r\n    }\r\n\r\n    protected start(): void {\r\n        // 不自动发射球，等待GameManager准备完成后手动调用launch()\r\n        console.log('Ball ready, waiting for launch command');\r\n    }\r\n\r\n    public launch(direction?: Vec2): void {\r\n        if (!this._rigidBody) return;\r\n\r\n        let velocity: Vec2;\r\n        if (direction && (direction.x !== 0 || direction.y !== 0)) {\r\n            // 使用指定方向\r\n            const normalized = direction.normalize();\r\n            velocity = new Vec2(\r\n                normalized.x * this.initialSpeed,\r\n                normalized.y * this.initialSpeed\r\n            );\r\n        } else {\r\n            // 使用默认随机方向\r\n            const angle = Math.PI / 4 + Math.random() * (Math.PI / 2);\r\n            velocity = new Vec2(\r\n                Math.cos(angle) * this.initialSpeed,\r\n                Math.sin(angle) * this.initialSpeed\r\n            );\r\n        }\r\n\r\n        this._rigidBody.linearVelocity = velocity;\r\n        this.isMoving = true;\r\n        \r\n        console.log(`Ball launched from position: (${this.node.position.x}, ${this.node.position.y})`);\r\n        console.log(`Ball velocity: (${velocity.x}, ${velocity.y}), angle: ${Math.atan2(velocity.y, velocity.x) * 180 / Math.PI}°`);\r\n    }\r\n\r\n    public launchWithDefaultDirection(): void {\r\n        this.launch();\r\n    }\r\n\r\n    public resetBall(): void {\r\n        if (!this._rigidBody) return;\r\n        \r\n        this.node.setPosition(0, 0, 0);\r\n        this._rigidBody.linearVelocity = new Vec2(0, 0);\r\n        this.isMoving = false;\r\n        this.scheduleOnce(() => this.launch(), 1.0);\r\n    }\r\n\r\n    // 特效系统方法\r\n    public applyFireEffect(duration: number): void {\r\n        if (typeof duration === 'number' && duration > 0) {\r\n            this.fireEffectDuration = duration;\r\n        }\r\n    }\r\n\r\n    public applyIceEffect(duration: number): void {\r\n        if (typeof duration === 'number' && duration > 0) {\r\n            this.iceEffectDuration = duration;\r\n        }\r\n    }\r\n\r\n    public hasFireEffect(): boolean {\r\n        return this.fireEffectDuration > 0;\r\n    }\r\n\r\n    public hasIceEffect(): boolean {\r\n        return this.iceEffectDuration > 0;\r\n    }\r\n\r\n    public getFireEffectDuration(): number {\r\n        return this.fireEffectDuration;\r\n    }\r\n\r\n    public getIceEffectDuration(): number {\r\n        return this.iceEffectDuration;\r\n    }\r\n\r\n    // 碰撞处理方法 - 修复测试失败的核心问题\r\n    public onBeginContact(_selfCollider: Collider2D, otherCollider: Collider2D, _contact: IPhysics2DContact | null): void {\r\n        if (!otherCollider || !otherCollider.node) {\r\n            return;\r\n        }\r\n\r\n        const otherNode = otherCollider.node;\r\n        if (otherNode.name === 'Paddle' || otherNode.getComponent('PaddleController')) {\r\n            this.onPaddleHit(otherNode);\r\n        }\r\n    }\r\n\r\n    private onPaddleHit(paddleNode: Node): void {\r\n        if (!this._rigidBody || !paddleNode) return;\r\n        \r\n        const velocity = this._rigidBody.linearVelocity;\r\n        // 修复测试失败的问题：确保球向上反弹\r\n        if (velocity.y < 0) {\r\n            velocity.y = Math.abs(velocity.y);\r\n            this._rigidBody.linearVelocity = velocity;\r\n        }\r\n    }\r\n\r\n    public get velocity(): Vec2 {\r\n        return this._rigidBody ? this._rigidBody.linearVelocity : new Vec2(0, 0);\r\n    }\r\n\r\n    public set velocity(value: Vec2) {\r\n        if (this._rigidBody) {\r\n            this._rigidBody.linearVelocity = value;\r\n        }\r\n    }\r\n\r\n    protected update(deltaTime?: number): void {\r\n        if (!this._rigidBody) return;\r\n\r\n        // 更新特效持续时间\r\n        const dt = deltaTime || 1/60;\r\n        if (this.fireEffectDuration > 0) {\r\n            this.fireEffectDuration -= dt;\r\n            if (this.fireEffectDuration < 0) {\r\n                this.fireEffectDuration = 0;\r\n            }\r\n        }\r\n        if (this.iceEffectDuration > 0) {\r\n            this.iceEffectDuration -= dt;\r\n            if (this.iceEffectDuration < 0) {\r\n                this.iceEffectDuration = 0;\r\n            }\r\n        }\r\n\r\n        // 速度控制\r\n        const velocity = this._rigidBody.linearVelocity;\r\n        const speed = velocity.length();\r\n        \r\n        if (speed > this.maxSpeed) {\r\n            velocity.normalize();\r\n            velocity.multiplyScalar(this.maxSpeed);\r\n            this._rigidBody.linearVelocity = velocity;\r\n        } else if (speed < this.initialSpeed * 0.8) {\r\n            velocity.normalize();\r\n            velocity.multiplyScalar(this.initialSpeed);\r\n            this._rigidBody.linearVelocity = velocity;\r\n        }\r\n    }\r\n}"]}