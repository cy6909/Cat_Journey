{"version":3,"sources":["file:///E:/work_space/wx/Cat_Journey/assets/scripts/ui/EnhancedParticleEffect.ts"],"names":["_decorator","Component","ParticleSystem2D","Texture2D","SpriteFrame","Color","Vec2","tween","ccclass","property","EnhancedParticleEffect","type","String","tooltip","particleSystem","originalEmissionRate","colorAnimationTween","onLoad","node","getComponent","addComponent","setupParticleEffect","start","enableColorAnimation","startColorAnimation","particleCount","effectType","setupStarEffect","setupMagicEffect","setupEnergyEffect","setupLeafEffect","setupSnowEffect","setupDefaultEffect","duration","emissionRate","life","startSize","endSize","startColor","endColor","gravity","speed","speedVar","angle","angleVar","startSpin","endSpin","spriteFrame","createStarTexture","createMagicTexture","createEnergyTexture","createLeafTexture","createSnowTexture","createDefaultTexture","texture","size","reset","width","height","format","PixelFormat","RGBA8888","data","Uint8Array","y","x","centerX","centerY","dx","Math","abs","dy","index","uploadData","distance","sqrt","intensity","i","length","originalStartColor","clone","originalEndColor","repeatForever","to","min","r","g","b","a","setIntensity","normalizedIntensity","max","enableAudioReactive","scale","setScale","triggerBurst","burstCount","originalRate","scheduleOnce","setEffectType","onDestroy","stop"],"mappings":"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","sourcesContent":["import { _decorator, Component, ParticleSystem2D, Texture2D, SpriteFrame, Color, Vec2, tween, Vec3 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('EnhancedParticleEffect')\r\nexport class EnhancedParticleEffect extends Component {\r\n    @property({ type: String, tooltip: \"粒子效果类型: star, magic, energy, leaf, snow\" })\r\n    public effectType: string = \"star\";\r\n\r\n    @property({ tooltip: \"粒子数量\" })\r\n    public particleCount: number = 50;\r\n\r\n    @property({ tooltip: \"启用动态颜色变化\" })\r\n    public enableColorAnimation: boolean = true;\r\n\r\n    @property({ tooltip: \"启用音频响应\" })\r\n    public enableAudioReactive: boolean = false;\r\n\r\n    @property({ tooltip: \"动画强度\" })\r\n    public animationIntensity: number = 1.0;\r\n\r\n    private particleSystem: ParticleSystem2D | null = null;\r\n    private originalEmissionRate: number = 0;\r\n    private colorAnimationTween: any = null;\r\n\r\n    protected onLoad(): void {\r\n        this.particleSystem = this.node.getComponent(ParticleSystem2D);\r\n        if (!this.particleSystem) {\r\n            this.particleSystem = this.node.addComponent(ParticleSystem2D);\r\n        }\r\n\r\n        this.setupParticleEffect();\r\n    }\r\n\r\n    protected start(): void {\r\n        if (this.enableColorAnimation) {\r\n            this.startColorAnimation();\r\n        }\r\n    }\r\n\r\n    private setupParticleEffect(): void {\r\n        if (!this.particleSystem) return;\r\n\r\n        this.originalEmissionRate = this.particleCount / 10;\r\n\r\n        switch (this.effectType) {\r\n            case \"star\":\r\n                this.setupStarEffect();\r\n                break;\r\n            case \"magic\":\r\n                this.setupMagicEffect();\r\n                break;\r\n            case \"energy\":\r\n                this.setupEnergyEffect();\r\n                break;\r\n            case \"leaf\":\r\n                this.setupLeafEffect();\r\n                break;\r\n            case \"snow\":\r\n                this.setupSnowEffect();\r\n                break;\r\n            default:\r\n                this.setupDefaultEffect();\r\n        }\r\n    }\r\n\r\n    private setupStarEffect(): void {\r\n        if (!this.particleSystem) return;\r\n\r\n        this.particleSystem.duration = -1;\r\n        this.particleSystem.emissionRate = this.originalEmissionRate;\r\n        this.particleSystem.life = 4;\r\n        this.particleSystem.startSize = 2;\r\n        this.particleSystem.endSize = 0;\r\n        this.particleSystem.startColor = new Color(255, 255, 255, 255);\r\n        this.particleSystem.endColor = new Color(255, 255, 255, 0);\r\n        this.particleSystem.gravity = new Vec2(0, 0);\r\n        this.particleSystem.speed = 10;\r\n        this.particleSystem.speedVar = 5;\r\n        this.particleSystem.angle = 90;\r\n        this.particleSystem.angleVar = 360;\r\n        this.particleSystem.startSpin = 0;\r\n        this.particleSystem.endSpin = 360;\r\n\r\n        this.particleSystem.spriteFrame = this.createStarTexture();\r\n    }\r\n\r\n    private setupMagicEffect(): void {\r\n        if (!this.particleSystem) return;\r\n\r\n        this.particleSystem.duration = -1;\r\n        this.particleSystem.emissionRate = this.originalEmissionRate * 0.8;\r\n        this.particleSystem.life = 6;\r\n        this.particleSystem.startSize = 4;\r\n        this.particleSystem.endSize = 1;\r\n        this.particleSystem.startColor = new Color(255, 100, 255, 255);\r\n        this.particleSystem.endColor = new Color(100, 255, 255, 0);\r\n        this.particleSystem.gravity = new Vec2(0, 15);\r\n        this.particleSystem.speed = 25;\r\n        this.particleSystem.speedVar = 10;\r\n        this.particleSystem.angle = 90;\r\n        this.particleSystem.angleVar = 45;\r\n        this.particleSystem.startSpin = 0;\r\n        this.particleSystem.endSpin = 720;\r\n\r\n        this.particleSystem.spriteFrame = this.createMagicTexture();\r\n    }\r\n\r\n    private setupEnergyEffect(): void {\r\n        if (!this.particleSystem) return;\r\n\r\n        this.particleSystem.duration = -1;\r\n        this.particleSystem.emissionRate = this.originalEmissionRate * 1.2;\r\n        this.particleSystem.life = 3;\r\n        this.particleSystem.startSize = 3;\r\n        this.particleSystem.endSize = 0;\r\n        this.particleSystem.startColor = new Color(255, 255, 0, 255);\r\n        this.particleSystem.endColor = new Color(255, 100, 0, 0);\r\n        this.particleSystem.gravity = new Vec2(0, -10);\r\n        this.particleSystem.speed = 30;\r\n        this.particleSystem.speedVar = 15;\r\n        this.particleSystem.angle = 90;\r\n        this.particleSystem.angleVar = 180;\r\n\r\n        this.particleSystem.spriteFrame = this.createEnergyTexture();\r\n    }\r\n\r\n    private setupLeafEffect(): void {\r\n        if (!this.particleSystem) return;\r\n\r\n        this.particleSystem.duration = -1;\r\n        this.particleSystem.emissionRate = this.originalEmissionRate * 0.6;\r\n        this.particleSystem.life = 8;\r\n        this.particleSystem.startSize = 5;\r\n        this.particleSystem.endSize = 3;\r\n        this.particleSystem.startColor = new Color(255, 200, 0, 255);\r\n        this.particleSystem.endColor = new Color(200, 100, 0, 180);\r\n        this.particleSystem.gravity = new Vec2(0, -20);\r\n        this.particleSystem.speed = 15;\r\n        this.particleSystem.speedVar = 8;\r\n        this.particleSystem.angle = 0;\r\n        this.particleSystem.angleVar = 30;\r\n        this.particleSystem.startSpin = 0;\r\n        this.particleSystem.endSpin = 180;\r\n\r\n        this.particleSystem.spriteFrame = this.createLeafTexture();\r\n    }\r\n\r\n    private setupSnowEffect(): void {\r\n        if (!this.particleSystem) return;\r\n\r\n        this.particleSystem.duration = -1;\r\n        this.particleSystem.emissionRate = this.originalEmissionRate * 0.5;\r\n        this.particleSystem.life = 12;\r\n        this.particleSystem.startSize = 4;\r\n        this.particleSystem.endSize = 2;\r\n        this.particleSystem.startColor = new Color(255, 255, 255, 255);\r\n        this.particleSystem.endColor = new Color(200, 220, 255, 180);\r\n        this.particleSystem.gravity = new Vec2(0, -20);\r\n        this.particleSystem.speed = 15;\r\n        this.particleSystem.speedVar = 8;\r\n        this.particleSystem.angle = 0;\r\n        this.particleSystem.angleVar = 15;\r\n        this.particleSystem.startSpin = 0;\r\n        this.particleSystem.endSpin = 360;\r\n\r\n        this.particleSystem.spriteFrame = this.createSnowTexture();\r\n    }\r\n\r\n    private setupDefaultEffect(): void {\r\n        if (!this.particleSystem) return;\r\n\r\n        this.particleSystem.duration = -1;\r\n        this.particleSystem.emissionRate = this.originalEmissionRate;\r\n        this.particleSystem.life = 3;\r\n        this.particleSystem.startSize = 3;\r\n        this.particleSystem.endSize = 1;\r\n        this.particleSystem.startColor = new Color(255, 255, 255, 255);\r\n        this.particleSystem.endColor = new Color(255, 255, 255, 0);\r\n\r\n        this.particleSystem.spriteFrame = this.createDefaultTexture();\r\n    }\r\n\r\n    private createStarTexture(): SpriteFrame {\r\n        const texture = new Texture2D();\r\n        const size = 4;\r\n        \r\n        texture.reset({\r\n            width: size,\r\n            height: size,\r\n            format: Texture2D.PixelFormat.RGBA8888\r\n        });\r\n\r\n        const data = new Uint8Array(size * size * 4);\r\n        \r\n        for (let y = 0; y < size; y++) {\r\n            for (let x = 0; x < size; x++) {\r\n                const centerX = size / 2;\r\n                const centerY = size / 2;\r\n                const dx = Math.abs(x - centerX);\r\n                const dy = Math.abs(y - centerY);\r\n                \r\n                if ((dx < 0.8 && dy < 2) || (dy < 0.8 && dx < 2)) {\r\n                    const index = (y * size + x) * 4;\r\n                    data[index] = 255;     // R\r\n                    data[index + 1] = 255; // G\r\n                    data[index + 2] = 255; // B\r\n                    data[index + 3] = 255; // A\r\n                }\r\n            }\r\n        }\r\n\r\n        texture.uploadData(data);\r\n        const spriteFrame = new SpriteFrame();\r\n        spriteFrame.texture = texture;\r\n        return spriteFrame;\r\n    }\r\n\r\n    private createMagicTexture(): SpriteFrame {\r\n        const texture = new Texture2D();\r\n        const size = 6;\r\n        \r\n        texture.reset({\r\n            width: size,\r\n            height: size,\r\n            format: Texture2D.PixelFormat.RGBA8888\r\n        });\r\n\r\n        const data = new Uint8Array(size * size * 4);\r\n        \r\n        for (let y = 0; y < size; y++) {\r\n            for (let x = 0; x < size; x++) {\r\n                const centerX = size / 2;\r\n                const centerY = size / 2;\r\n                const distance = Math.sqrt((x - centerX) ** 2 + (y - centerY) ** 2);\r\n                \r\n                if (distance <= size / 2) {\r\n                    const index = (y * size + x) * 4;\r\n                    const intensity = 255 * (1 - distance / (size / 2));\r\n                    data[index] = 255;           // R\r\n                    data[index + 1] = intensity; // G\r\n                    data[index + 2] = 255;       // B\r\n                    data[index + 3] = intensity; // A\r\n                }\r\n            }\r\n        }\r\n\r\n        texture.uploadData(data);\r\n        const spriteFrame = new SpriteFrame();\r\n        spriteFrame.texture = texture;\r\n        return spriteFrame;\r\n    }\r\n\r\n    private createEnergyTexture(): SpriteFrame {\r\n        const texture = new Texture2D();\r\n        const size = 4;\r\n        \r\n        texture.reset({\r\n            width: size,\r\n            height: size,\r\n            format: Texture2D.PixelFormat.RGBA8888\r\n        });\r\n\r\n        const data = new Uint8Array(size * size * 4);\r\n        \r\n        for (let y = 0; y < size; y++) {\r\n            for (let x = 0; x < size; x++) {\r\n                const centerX = size / 2;\r\n                const centerY = size / 2;\r\n                const dx = Math.abs(x - centerX);\r\n                const dy = Math.abs(y - centerY);\r\n                \r\n                if (dx + dy <= size / 2) {\r\n                    const index = (y * size + x) * 4;\r\n                    data[index] = 255;     // R\r\n                    data[index + 1] = 255; // G\r\n                    data[index + 2] = 0;   // B\r\n                    data[index + 3] = 255; // A\r\n                }\r\n            }\r\n        }\r\n\r\n        texture.uploadData(data);\r\n        const spriteFrame = new SpriteFrame();\r\n        spriteFrame.texture = texture;\r\n        return spriteFrame;\r\n    }\r\n\r\n    private createLeafTexture(): SpriteFrame {\r\n        const texture = new Texture2D();\r\n        const size = 6;\r\n        \r\n        texture.reset({\r\n            width: size,\r\n            height: size,\r\n            format: Texture2D.PixelFormat.RGBA8888\r\n        });\r\n\r\n        const data = new Uint8Array(size * size * 4);\r\n        \r\n        for (let y = 0; y < size; y++) {\r\n            for (let x = 0; x < size; x++) {\r\n                const index = (y * size + x) * 4;\r\n                \r\n                // 椭圆形叶子\r\n                const centerX = size / 2;\r\n                const centerY = size / 2;\r\n                const dx = (x - centerX) / (size / 2);\r\n                const dy = (y - centerY) / (size / 3);\r\n                \r\n                if (dx * dx + dy * dy <= 1) {\r\n                    data[index] = 200;     // R\r\n                    data[index + 1] = 150; // G\r\n                    data[index + 2] = 0;   // B\r\n                    data[index + 3] = 255; // A\r\n                }\r\n            }\r\n        }\r\n\r\n        texture.uploadData(data);\r\n        const spriteFrame = new SpriteFrame();\r\n        spriteFrame.texture = texture;\r\n        return spriteFrame;\r\n    }\r\n\r\n    private createSnowTexture(): SpriteFrame {\r\n        const texture = new Texture2D();\r\n        const size = 6;\r\n        \r\n        texture.reset({\r\n            width: size,\r\n            height: size,\r\n            format: Texture2D.PixelFormat.RGBA8888\r\n        });\r\n\r\n        const data = new Uint8Array(size * size * 4);\r\n        \r\n        for (let y = 0; y < size; y++) {\r\n            for (let x = 0; x < size; x++) {\r\n                const centerX = size / 2;\r\n                const centerY = size / 2;\r\n                const dx = x - centerX;\r\n                const dy = y - centerY;\r\n                \r\n                // 六角雪花\r\n                if ((Math.abs(dx) < 0.8 && Math.abs(dy) < 2.5) || \r\n                    (Math.abs(dy) < 0.8 && Math.abs(dx) < 2.5) ||\r\n                    (Math.abs(dx - dy) < 0.8) || \r\n                    (Math.abs(dx + dy) < 0.8)) {\r\n                    const index = (y * size + x) * 4;\r\n                    data[index] = 255;     // R\r\n                    data[index + 1] = 255; // G\r\n                    data[index + 2] = 255; // B\r\n                    data[index + 3] = 255; // A\r\n                }\r\n            }\r\n        }\r\n\r\n        texture.uploadData(data);\r\n        const spriteFrame = new SpriteFrame();\r\n        spriteFrame.texture = texture;\r\n        return spriteFrame;\r\n    }\r\n\r\n    private createDefaultTexture(): SpriteFrame {\r\n        const texture = new Texture2D();\r\n        const size = 4;\r\n        \r\n        texture.reset({\r\n            width: size,\r\n            height: size,\r\n            format: Texture2D.PixelFormat.RGBA8888\r\n        });\r\n\r\n        const data = new Uint8Array(size * size * 4);\r\n        \r\n        for (let i = 0; i < data.length; i += 4) {\r\n            data[i] = 255;     // R\r\n            data[i + 1] = 255; // G\r\n            data[i + 2] = 255; // B\r\n            data[i + 3] = 255; // A\r\n        }\r\n\r\n        texture.uploadData(data);\r\n        const spriteFrame = new SpriteFrame();\r\n        spriteFrame.texture = texture;\r\n        return spriteFrame;\r\n    }\r\n\r\n    private startColorAnimation(): void {\r\n        if (!this.particleSystem) return;\r\n\r\n        const originalStartColor = this.particleSystem.startColor.clone();\r\n        const originalEndColor = this.particleSystem.endColor.clone();\r\n\r\n        this.colorAnimationTween = tween(this.particleSystem)\r\n            .repeatForever(\r\n                tween()\r\n                    .to(3, {\r\n                        startColor: new Color(\r\n                            Math.min(255, originalStartColor.r + 50),\r\n                            Math.min(255, originalStartColor.g + 30),\r\n                            Math.min(255, originalStartColor.b + 70),\r\n                            originalStartColor.a\r\n                        )\r\n                    })\r\n                    .to(3, { startColor: originalStartColor })\r\n            )\r\n            .start();\r\n    }\r\n\r\n    /**\r\n     * 设置粒子强度（用于音频响应）\r\n     */\r\n    public setIntensity(intensity: number): void {\r\n        if (!this.particleSystem) return;\r\n\r\n        const normalizedIntensity = Math.max(0, Math.min(2, intensity));\r\n        this.particleSystem.emissionRate = this.originalEmissionRate * normalizedIntensity;\r\n        \r\n        if (this.enableAudioReactive) {\r\n            const scale = 0.8 + (normalizedIntensity * 0.4);\r\n            this.node.setScale(scale, scale, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 触发爆发效果\r\n     */\r\n    public triggerBurst(burstCount: number = 20): void {\r\n        if (!this.particleSystem) return;\r\n\r\n        const originalRate = this.particleSystem.emissionRate;\r\n        this.particleSystem.emissionRate = burstCount * 10;\r\n        \r\n        this.scheduleOnce(() => {\r\n            this.particleSystem!.emissionRate = originalRate;\r\n        }, 0.1);\r\n    }\r\n\r\n    /**\r\n     * 设置效果类型\r\n     */\r\n    public setEffectType(type: string): void {\r\n        this.effectType = type;\r\n        this.setupParticleEffect();\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        if (this.colorAnimationTween) {\r\n            this.colorAnimationTween.stop();\r\n        }\r\n    }\r\n}"]}