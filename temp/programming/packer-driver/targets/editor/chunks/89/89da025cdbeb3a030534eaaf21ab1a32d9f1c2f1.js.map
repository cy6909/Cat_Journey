{"version":3,"sources":["file:///E:/work_space/wx/Cat_Journey/assets/scripts/QuickBackgroundFix.ts"],"names":["_decorator","Component","Sprite","SpriteFrame","Texture2D","Color","UITransform","Widget","view","ccclass","property","QuickBackgroundFix","onLoad","console","log","setupFullScreenBackground","transform","node","getComponent","addComponent","designSize","getDesignResolutionSize","screenSize","getVisibleSize","width","Math","max","height","setContentSize","setAnchorPoint","widget","isAlignLeft","isAlignRight","isAlignTop","isAlignBottom","left","right","top","bottom","alignMode","AlignMode","ON_WINDOW_RESIZE","updateAlignment","createSolidBackground","texture","createSolidTexture","backgroundColor","existingSprites","getComponents","forEach","sprite","destroy","spriteFrame","color","WHITE","w","floor","h","reset","format","PixelFormat","RGBA8888","data","Uint8Array","i","length","r","g","b","a","uploadData"],"mappings":"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","sourcesContent":["import { _decorator, Component, Sprite, SpriteFrame, Texture2D, Color, UITransform, Widget, view } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('QuickBackgroundFix')\r\nexport class QuickBackgroundFix extends Component {\r\n    @property\r\n    public backgroundColor: Color = new Color(30, 60, 120, 255); // 明亮的蓝色\r\n\r\n    protected onLoad(): void {\r\n        console.log('QuickBackgroundFix: Starting quick fix');\r\n        this.setupFullScreenBackground();\r\n    }\r\n\r\n    private setupFullScreenBackground(): void {\r\n        // 1. 确保有UITransform组件\r\n        let transform = this.node.getComponent(UITransform);\r\n        if (!transform) {\r\n            transform = this.node.addComponent(UITransform);\r\n        }\r\n\r\n        // 2. 获取并设置全屏尺寸\r\n        const designSize = view.getDesignResolutionSize();\r\n        const screenSize = view.getVisibleSize();\r\n        \r\n        // 使用最大尺寸确保覆盖全屏\r\n        const width = Math.max(designSize.width, screenSize.width, 960);\r\n        const height = Math.max(designSize.height, screenSize.height, 640);\r\n        \r\n        console.log(`QuickBackgroundFix: Setting size to ${width}x${height}`);\r\n        \r\n        transform.setContentSize(width, height);\r\n        transform.setAnchorPoint(0.5, 0.5);\r\n\r\n        // 3. 添加Widget自动适配\r\n        let widget = this.node.getComponent(Widget);\r\n        if (!widget) {\r\n            widget = this.node.addComponent(Widget);\r\n        }\r\n        \r\n        // Widget配置 - 填满整个屏幕\r\n        widget.isAlignLeft = true;\r\n        widget.isAlignRight = true;\r\n        widget.isAlignTop = true;\r\n        widget.isAlignBottom = true;\r\n        widget.left = 0;\r\n        widget.right = 0;\r\n        widget.top = 0;\r\n        widget.bottom = 0;\r\n        widget.alignMode = Widget.AlignMode.ON_WINDOW_RESIZE;\r\n        widget.updateAlignment();\r\n\r\n        // 4. 创建简单的纯色背景\r\n        this.createSolidBackground();\r\n        \r\n        console.log(`QuickBackgroundFix: Background created with final size ${transform.width}x${transform.height}`);\r\n    }\r\n\r\n    private createSolidBackground(): void {\r\n        const transform = this.node.getComponent(UITransform);\r\n        const texture = this.createSolidTexture(transform.width, transform.height, this.backgroundColor);\r\n        \r\n        // 移除现有的Sprite组件\r\n        const existingSprites = this.node.getComponents(Sprite);\r\n        existingSprites.forEach(sprite => sprite.destroy());\r\n        \r\n        // 添加新的Sprite\r\n        const sprite = this.node.addComponent(Sprite);\r\n        const spriteFrame = new SpriteFrame();\r\n        spriteFrame.texture = texture;\r\n        sprite.spriteFrame = spriteFrame;\r\n        sprite.color = Color.WHITE;\r\n        \r\n        console.log('QuickBackgroundFix: Solid background texture applied');\r\n    }\r\n\r\n    private createSolidTexture(width: number, height: number, color: Color): Texture2D {\r\n        const texture = new Texture2D();\r\n        const w = Math.max(1, Math.floor(width));\r\n        const h = Math.max(1, Math.floor(height));\r\n        \r\n        texture.reset({\r\n            width: w,\r\n            height: h,\r\n            format: Texture2D.PixelFormat.RGBA8888\r\n        });\r\n\r\n        const data = new Uint8Array(w * h * 4);\r\n        \r\n        // 填充纯色\r\n        for (let i = 0; i < data.length; i += 4) {\r\n            data[i] = color.r;         // R\r\n            data[i + 1] = color.g;     // G\r\n            data[i + 2] = color.b;     // B\r\n            data[i + 3] = color.a;     // A\r\n        }\r\n\r\n        texture.uploadData(data);\r\n        console.log(`QuickBackgroundFix: Created texture ${w}x${h} with color (${color.r},${color.g},${color.b},${color.a})`);\r\n        return texture;\r\n    }\r\n}"]}