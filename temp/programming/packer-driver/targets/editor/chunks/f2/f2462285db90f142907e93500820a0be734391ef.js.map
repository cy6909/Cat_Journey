{"version":3,"sources":["file:///D:/project/claudecode/wx/Cat_Journey/assets/scripts/managers/UltraSimpleExperienceOrb.ts"],"names":["_decorator","Component","Vec3","Vec2","GameManager","ExperienceManager","ccclass","property","UltraSimpleExperienceOrb","_velocity","_paddleNode","_isCollected","_lifeTime","start","gameManager","getInstance","getPaddleNode","x","y","fallSpeed","update","dt","node","destroy","currentWorldPos","getWorldPosition","isValid","paddleWorldPos","xDiff","Math","abs","yDiff","collect","currentLocalPos","position","newPos","z","setPosition","expManager","addExperience","experienceValue","forceCollect","setPaddleNode","paddle"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec3, Vec2 } from 'cc';\r\nimport { GameManager } from '../gameplay/GameManager';\r\nimport { ExperienceManager } from './ExperienceManager';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * 极简经验球组件 - 无物理依赖版本\r\n *\r\n * Linus式设计：删除所有不必要的复杂性\r\n * - 无RigidBody2D\r\n * - 无Collider2D\r\n * - 纯位置检测\r\n */\r\n@ccclass('UltraSimpleExperienceOrb')\r\nexport class UltraSimpleExperienceOrb extends Component {\r\n    @property\r\n    public experienceValue: number = 10;\r\n\r\n    @property\r\n    public fallSpeed: number = 150;  // 掉落速度\r\n\r\n    private _velocity: Vec2 = new Vec2(0, -150);\r\n    private _paddleNode: Node | null = null;\r\n    private _isCollected: boolean = false;\r\n    private _lifeTime: number = 0;\r\n\r\n    protected start(): void {\r\n        // 查找挡板\r\n        const gameManager = GameManager.getInstance();\r\n        if (gameManager) {\r\n            this._paddleNode = gameManager.getPaddleNode();\r\n        }\r\n\r\n        // 初始速度 - 直接向下掉落\r\n        this._velocity.x = 0;\r\n        this._velocity.y = -this.fallSpeed;\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        if (this._isCollected) return;\r\n\r\n        // 生命周期管理 - 10秒后消失\r\n        this._lifeTime += dt;\r\n        if (this._lifeTime > 10) {\r\n            this.node.destroy();\r\n            return;\r\n        }\r\n\r\n        // 使用世界坐标进行碰撞检测\r\n        const currentWorldPos = this.node.getWorldPosition();\r\n\r\n        // 检查是否碰到挡板\r\n        if (this._paddleNode && this._paddleNode.isValid) {\r\n            const paddleWorldPos = this._paddleNode.getWorldPosition();\r\n\r\n            // 简单的矩形碰撞检测\r\n            const xDiff = Math.abs(currentWorldPos.x - paddleWorldPos.x);\r\n            const yDiff = Math.abs(currentWorldPos.y - paddleWorldPos.y);\r\n\r\n            // 挡板宽度约80，高度约20；经验球约20x20\r\n            // 碰撞检测：x方向 < 50 (40+10), y方向 < 30 (10+20)\r\n            if (xDiff < 50 && yDiff < 30) {\r\n                this.collect();\r\n                return;\r\n            }\r\n        }\r\n\r\n        // 更新位置 - 简单的向下掉落\r\n        const currentLocalPos = this.node.position;\r\n        const newPos = new Vec3(\r\n            currentLocalPos.x,\r\n            currentLocalPos.y + this._velocity.y * dt,\r\n            currentLocalPos.z\r\n        );\r\n\r\n        // 底部边界检查 - 掉出屏幕则销毁\r\n        if (newPos.y < -400) {\r\n            this.node.destroy();\r\n            return;\r\n        }\r\n\r\n        this.node.setPosition(newPos);\r\n    }\r\n\r\n    private collect(): void {\r\n        if (this._isCollected) return;\r\n        this._isCollected = true;\r\n\r\n        // 添加经验值\r\n        const expManager = ExperienceManager.getInstance();\r\n        if (expManager) {\r\n            expManager.addExperience(this.experienceValue);\r\n        }\r\n\r\n        // 直接销毁，不播放动画\r\n        this.node.destroy();\r\n    }\r\n\r\n    // 公开方法，用于测试\r\n    public forceCollect(): void {\r\n        this.collect();\r\n    }\r\n\r\n    public setPaddleNode(paddle: Node): void {\r\n        this._paddleNode = paddle;\r\n    }\r\n}"]}