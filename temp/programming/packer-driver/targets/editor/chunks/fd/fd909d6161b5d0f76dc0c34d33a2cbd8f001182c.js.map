{"version":3,"sources":["file:///D:/project/claudecode/wx/Cat_Journey/assets/scripts/FinalBackgroundFix.ts"],"names":["_decorator","Component","Sprite","SpriteFrame","Texture2D","Color","UITransform","view","ccclass","property","FinalBackgroundFix","onLoad","debugMode","console","log","createRobustBackground","transform","node","getComponent","addComponent","error","designSize","getDesignResolutionSize","targetWidth","Math","max","width","targetHeight","height","existingSprites","getComponents","forEach","sprite","destroy","texture","createLargeTexture","spriteFrame","color","WHITE","sizeMode","SizeMode","CUSTOM","type","Type","SIMPLE","setContentSize","setAnchorPoint","markForUpdateRenderData","layer","scheduleOnce","finalTransform","verifyFinalResult","w","floor","h","reset","format","PixelFormat","RGBA8888","data","Uint8Array","i","length","backgroundColor","r","g","b","a","uploadData","active","position","x","y"],"mappings":"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","sourcesContent":["import { _decorator, Component, Sprite, SpriteFrame, Texture2D, Color, UITransform, view } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('FinalBackgroundFix')\r\nexport class FinalBackgroundFix extends Component {\r\n    @property\r\n    public backgroundColor: Color = new Color(255, 0, 255, 255); // 洋红色，非常显眼\r\n\r\n    @property  \r\n    public debugMode: boolean = true;\r\n\r\n    protected onLoad(): void {\r\n        if (this.debugMode) {\r\n            console.log('=== FinalBackgroundFix: 开始最终修复 ===');\r\n        }\r\n        this.createRobustBackground();\r\n    }\r\n\r\n    private createRobustBackground(): void {\r\n        // 1. 确保UITransform存在且正确\r\n        let transform = this.node.getComponent(UITransform);\r\n        if (!transform) {\r\n            transform = this.node.addComponent(UITransform);\r\n        }\r\n        // 确保transform不为null\r\n        if (!transform) {\r\n            console.error('FinalBackgroundFix: 无法获取或创建UITransform组件');\r\n            return;\r\n        }\r\n\r\n        // 2. 获取正确尺寸\r\n        const designSize = view.getDesignResolutionSize();\r\n        const targetWidth = Math.max(designSize.width, 960);\r\n        const targetHeight = Math.max(designSize.height, 640);\r\n\r\n        if (this.debugMode) {\r\n            console.log(`FinalBackgroundFix: 设置目标尺寸 ${targetWidth}x${targetHeight}`);\r\n        }\r\n\r\n        // 3. 移除所有现有Sprite组件\r\n        const existingSprites = this.node.getComponents(Sprite);\r\n        existingSprites.forEach(sprite => sprite.destroy());\r\n\r\n        // 4. 创建大纹理（避免尺寸问题）\r\n        const texture = this.createLargeTexture(targetWidth, targetHeight);\r\n        \r\n        // 5. 创建SpriteFrame\r\n        const spriteFrame = new SpriteFrame();\r\n        spriteFrame.texture = texture;\r\n\r\n        // 6. 添加Sprite组件并配置\r\n        const sprite = this.node.addComponent(Sprite);\r\n        sprite.spriteFrame = spriteFrame;\r\n        sprite.color = Color.WHITE;\r\n        \r\n        // ★ 关键：设置为CUSTOM模式，防止自动调整尺寸\r\n        sprite.sizeMode = Sprite.SizeMode.CUSTOM;\r\n        sprite.type = Sprite.Type.SIMPLE;\r\n\r\n        // 7. 强制设置UITransform尺寸（在Sprite设置之后）\r\n        transform.setContentSize(targetWidth, targetHeight);\r\n        transform.setAnchorPoint(0.5, 0.5);\r\n\r\n        // 8. 强制更新渲染\r\n        sprite.markForUpdateRenderData();\r\n        \r\n        // 9. 设置正确的Layer（确保Canvas摄像机能看到）\r\n        this.node.layer = 33554432; // UI_2D Layer\r\n\r\n        if (this.debugMode) {\r\n            console.log(`FinalBackgroundFix: 创建完成`);\r\n            console.log(`- 纹理尺寸: ${texture.width}x${texture.height}`);\r\n            console.log(`- UITransform: ${transform.width}x${transform.height}`);\r\n            console.log(`- Sprite sizeMode: ${sprite.sizeMode}`);\r\n            console.log(`- Node layer: ${this.node.layer}`);\r\n        }\r\n\r\n        // 10. 延迟验证尺寸\r\n        this.scheduleOnce(() => {\r\n            // 重新获取transform确保类型安全\r\n            const finalTransform = this.node.getComponent(UITransform);\r\n            if (finalTransform) {\r\n                this.verifyFinalResult(finalTransform, sprite);\r\n            }\r\n        }, 0.1);\r\n    }\r\n\r\n    private createLargeTexture(width: number, height: number): Texture2D {\r\n        const texture = new Texture2D();\r\n        const w = Math.max(1, Math.floor(width));\r\n        const h = Math.max(1, Math.floor(height));\r\n        \r\n        texture.reset({\r\n            width: w,\r\n            height: h,\r\n            format: Texture2D.PixelFormat.RGBA8888\r\n        });\r\n\r\n        // 创建纯色数据\r\n        const data = new Uint8Array(w * h * 4);\r\n        for (let i = 0; i < data.length; i += 4) {\r\n            data[i] = this.backgroundColor.r;     // R\r\n            data[i + 1] = this.backgroundColor.g; // G\r\n            data[i + 2] = this.backgroundColor.b; // B\r\n            data[i + 3] = this.backgroundColor.a; // A\r\n        }\r\n\r\n        texture.uploadData(data);\r\n        \r\n        if (this.debugMode) {\r\n            console.log(`FinalBackgroundFix: 创建纹理 ${w}x${h}`);\r\n        }\r\n        \r\n        return texture;\r\n    }\r\n\r\n    private verifyFinalResult(transform: UITransform, sprite: Sprite): void {\r\n        if (this.debugMode) {\r\n            console.log('=== FinalBackgroundFix: 最终验证 ===');\r\n            console.log(`UITransform最终尺寸: ${transform.width}x${transform.height}`);\r\n            console.log(`Sprite sizeMode: ${sprite.sizeMode}`);\r\n            console.log(`节点Layer: ${this.node.layer}`);\r\n            console.log(`节点active: ${this.node.active}`);\r\n            console.log(`节点position: (${this.node.position.x}, ${this.node.position.y})`);\r\n            \r\n            if (transform.width < 100 || transform.height < 100) {\r\n                console.error('❌ UITransform尺寸异常，可能被其他代码重置');\r\n                // 尝试再次设置\r\n                transform.setContentSize(960, 640);\r\n                console.log(`重新设置尺寸为: ${transform.width}x${transform.height}`);\r\n            } else {\r\n                console.log('✅ UITransform尺寸正常');\r\n            }\r\n        }\r\n    }\r\n}"]}