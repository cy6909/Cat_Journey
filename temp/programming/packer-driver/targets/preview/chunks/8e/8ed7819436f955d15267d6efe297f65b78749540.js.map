{"version":3,"sources":["file:///E:/work_space/wx/Cat_Journey/assets/scripts/ui/RelicUI.ts"],"names":["_decorator","Component","Node","Label","RelicManager","ccclass","property","RelicUI","_relicManager","onLoad","getInstance","start","updateRelicDisplay","schedule","activeRelics","getActiveRelics","relicCountLabel","string","length","relicContainer","removeAllChildren","forEach","relic","createRelicItem","relicNode","id","label","addComponent","name","fontSize","lineHeight","addChild","showRelicAcquired","console","log","description"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,K,OAAAA,K;;AAC7BC,MAAAA,Y,iBAAAA,Y;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;yBAGjBO,O,WADZF,OAAO,CAAC,SAAD,C,UAEHC,QAAQ,CAACJ,IAAD,C,UAGRI,QAAQ,CAACH,KAAD,C,2BALb,MACaI,OADb,SAC6BN,SAD7B,CACuC;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAO3BO,aAP2B,GAOU,IAPV;AAAA;;AASzBC,QAAAA,MAAM,GAAS;AACrB,eAAKD,aAAL,GAAqB;AAAA;AAAA,4CAAaE,WAAb,EAArB;AACH;;AAESC,QAAAA,KAAK,GAAS;AACpB,eAAKC,kBAAL;AACA,eAAKC,QAAL,CAAc,KAAKD,kBAAnB,EAAuC,GAAvC;AACH;;AAEOA,QAAAA,kBAAkB,GAAS;AAC/B,cAAI,CAAC,KAAKJ,aAAV,EAAyB;;AAEzB,cAAMM,YAAY,GAAG,KAAKN,aAAL,CAAmBO,eAAnB,EAArB;;AAEA,cAAI,KAAKC,eAAT,EAA0B;AACtB,iBAAKA,eAAL,CAAqBC,MAArB,gBAAyCH,YAAY,CAACI,MAAtD;AACH;;AAED,cAAI,KAAKC,cAAT,EAAyB;AACrB,iBAAKA,cAAL,CAAoBC,iBAApB;AAEAN,YAAAA,YAAY,CAACO,OAAb,CAAqBC,KAAK,IAAI;AAC1B,mBAAKC,eAAL,CAAqBD,KAArB;AACH,aAFD;AAGH;AACJ;;AAEOC,QAAAA,eAAe,CAACD,KAAD,EAAqB;AACxC,cAAI,CAAC,KAAKH,cAAV,EAA0B;AAE1B,cAAMK,SAAS,GAAG,IAAItB,IAAJ,YAAkBoB,KAAK,CAACG,EAAxB,CAAlB;AACA,cAAMC,KAAK,GAAGF,SAAS,CAACG,YAAV,CAAuBxB,KAAvB,CAAd;AAEAuB,UAAAA,KAAK,CAACT,MAAN,GAAeK,KAAK,CAACM,IAArB;AACAF,UAAAA,KAAK,CAACG,QAAN,GAAiB,EAAjB;AACAH,UAAAA,KAAK,CAACI,UAAN,GAAmB,EAAnB;AAEA,eAAKX,cAAL,CAAoBY,QAApB,CAA6BP,SAA7B;AACH;;AAEMQ,QAAAA,iBAAiB,CAACV,KAAD,EAAqB;AACzCW,UAAAA,OAAO,CAACC,GAAR,uCAAsCZ,KAAK,CAACM,IAA5C,WAAsDN,KAAK,CAACa,WAA5D;AACH;;AAnDkC,O;;;;;iBAEE,I;;;;;;;iBAGE,I","sourcesContent":["import { _decorator, Component, Node, Label, Layout } from 'cc';\r\nimport { RelicManager, Relic } from '../managers/RelicManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('RelicUI')\r\nexport class RelicUI extends Component {\r\n    @property(Node)\r\n    public relicContainer: Node | null = null;\r\n\r\n    @property(Label)\r\n    public relicCountLabel: Label | null = null;\r\n\r\n    private _relicManager: RelicManager | null = null;\r\n\r\n    protected onLoad(): void {\r\n        this._relicManager = RelicManager.getInstance();\r\n    }\r\n\r\n    protected start(): void {\r\n        this.updateRelicDisplay();\r\n        this.schedule(this.updateRelicDisplay, 1.0);\r\n    }\r\n\r\n    private updateRelicDisplay(): void {\r\n        if (!this._relicManager) return;\r\n\r\n        const activeRelics = this._relicManager.getActiveRelics();\r\n        \r\n        if (this.relicCountLabel) {\r\n            this.relicCountLabel.string = `Relics: ${activeRelics.length}`;\r\n        }\r\n\r\n        if (this.relicContainer) {\r\n            this.relicContainer.removeAllChildren();\r\n            \r\n            activeRelics.forEach(relic => {\r\n                this.createRelicItem(relic);\r\n            });\r\n        }\r\n    }\r\n\r\n    private createRelicItem(relic: Relic): void {\r\n        if (!this.relicContainer) return;\r\n\r\n        const relicNode = new Node(`Relic_${relic.id}`);\r\n        const label = relicNode.addComponent(Label);\r\n        \r\n        label.string = relic.name;\r\n        label.fontSize = 16;\r\n        label.lineHeight = 18;\r\n        \r\n        this.relicContainer.addChild(relicNode);\r\n    }\r\n\r\n    public showRelicAcquired(relic: Relic): void {\r\n        console.log(`ðŸŽ¯ New Relic Acquired: ${relic.name} - ${relic.description}`);\r\n    }\r\n}"]}