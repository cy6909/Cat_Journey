{"version":3,"sources":["file:///E:/work_space/wx/Cat_Journey/assets/scripts/CanvasLayerFixer.ts"],"names":["_decorator","Component","ccclass","property","CanvasLayerFixer","onLoad","debugMode","console","log","fixNodeLayers","fixSingleNode","node","fixChildrenRecursively","targetLayerValue","parentNode","children","forEach","child","length","oldLayer","layer","name"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;;;;;;;;OACf;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;kCAGjBI,gB,WADZF,OAAO,CAAC,kBAAD,C,2BAAR,MACaE,gBADb,SACsCH,SADtC,CACgD;AAAA;AAAA;;AAAA;;AAEA;AAFA;AAAA;;AAOlCI,QAAAA,MAAM,GAAS;AACrB,cAAI,KAAKC,SAAT,EAAoB;AAChBC,YAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACH;;AAED,eAAKC,aAAL;AACH;;AAEOA,QAAAA,aAAa,GAAS;AAC1B;AACA,eAAKC,aAAL,CAAmB,KAAKC,IAAxB,EAF0B,CAI1B;;AACA,eAAKC,sBAAL,CAA4B,KAAKD,IAAjC;;AAEA,cAAI,KAAKL,SAAT,EAAoB;AAChBC,YAAAA,OAAO,CAACC,GAAR,yEAA+C,KAAKK,gBAApD;AACH;AACJ;;AAEOD,QAAAA,sBAAsB,CAACE,UAAD,EAAyB;AACnDA,UAAAA,UAAU,CAACC,QAAX,CAAoBC,OAApB,CAA4BC,KAAK,IAAI;AACjC,iBAAKP,aAAL,CAAmBO,KAAnB;;AACA,gBAAIA,KAAK,CAACF,QAAN,CAAeG,MAAf,GAAwB,CAA5B,EAA+B;AAC3B,mBAAKN,sBAAL,CAA4BK,KAA5B;AACH;AACJ,WALD;AAMH;;AAEOP,QAAAA,aAAa,CAACC,IAAD,EAAmB;AACpC,cAAMQ,QAAQ,GAAGR,IAAI,CAACS,KAAtB,CADoC,CAGpC;;AACA,cAAID,QAAQ,KAAK,KAAKN,gBAAtB,EAAwC;AACpCF,YAAAA,IAAI,CAACS,KAAL,GAAa,KAAKP,gBAAlB;;AAEA,gBAAI,KAAKP,SAAT,EAAoB;AAChBC,cAAAA,OAAO,CAACC,GAAR,mDAAuCG,IAAI,CAACU,IAA5C,kBAA4DF,QAA5D,YAA2E,KAAKN,gBAAhF;AACH;AACJ;AACJ;;AA/C2C,O,mFAC3CV,Q;;;;;iBACiC,Q;;oFAEjCA,Q;;;;;iBAC2B,I","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CanvasLayerFixer')\r\nexport class CanvasLayerFixer extends Component {\r\n    @property\r\n    public targetLayerValue: number = 33554432; // Canvas默认Layer值\r\n    \r\n    @property\r\n    public debugMode: boolean = true;\r\n\r\n    protected onLoad(): void {\r\n        if (this.debugMode) {\r\n            console.log('CanvasLayerFixer: 开始修复Layer配置');\r\n        }\r\n        \r\n        this.fixNodeLayers();\r\n    }\r\n\r\n    private fixNodeLayers(): void {\r\n        // 修复当前节点\r\n        this.fixSingleNode(this.node);\r\n        \r\n        // 递归修复所有子节点\r\n        this.fixChildrenRecursively(this.node);\r\n        \r\n        if (this.debugMode) {\r\n            console.log(`CanvasLayerFixer: 修复完成，目标Layer: ${this.targetLayerValue}`);\r\n        }\r\n    }\r\n    \r\n    private fixChildrenRecursively(parentNode: Node): void {\r\n        parentNode.children.forEach(child => {\r\n            this.fixSingleNode(child);\r\n            if (child.children.length > 0) {\r\n                this.fixChildrenRecursively(child);\r\n            }\r\n        });\r\n    }\r\n    \r\n    private fixSingleNode(node: Node): void {\r\n        const oldLayer = node.layer;\r\n        \r\n        // 只有Layer不匹配时才修改\r\n        if (oldLayer !== this.targetLayerValue) {\r\n            node.layer = this.targetLayerValue;\r\n            \r\n            if (this.debugMode) {\r\n                console.log(`CanvasLayerFixer: 修复节点 \"${node.name}\" Layer: ${oldLayer} -> ${this.targetLayerValue}`);\r\n            }\r\n        }\r\n    }\r\n}"]}