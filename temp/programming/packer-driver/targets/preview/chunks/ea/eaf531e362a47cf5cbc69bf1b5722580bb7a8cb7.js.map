{"version":3,"sources":["file:///E:/work_space/wx/Cat_Journey/assets/scripts/managers/LevelSoundManager.ts"],"names":["_decorator","Component","AudioSource","resources","AudioClip","tween","Node","ccclass","property","SoundEffectType","LevelSoundManager","_soundPool","_activeSounds","Map","_soundConfigs","_audioClips","_currentAmbientLoop","getInstance","_instance","onLoad","initializeSoundPool","initializeSoundConfigs","preloadAudioClips","onDestroy","stopAllSounds","clear","i","maxConcurrentSounds","audioNode","audioSource","addComponent","volume","soundEffectVolume","node","addChild","push","console","log","set","UI_CLICK","clipName","pitch","loop","fadeIn","fadeOut","delay","randomPitch","spatialAudio","priority","UI_HOVER","BALL_BOUNCE_PADDLE","BALL_BOUNCE_BRICK","BALL_LOST","BRICK_HIT","BRICK_DESTROYED","BRICK_EXPLOSION","BRICK_ELECTRIC","BOSS_APPEAR","BOSS_DEFEATED","AMBIENT_WIND","AMBIENT_SPARKS","size","audioList","loadedCount","totalCount","length","forEach","clipPath","load","err","clip","warn","playSoundEffect","effectType","position","config","get","audioClip","getAvailableAudioSource","setupAudioSource","scheduleOnce","playAudioSource","soundId","Date","now","delete","returnAudioSourceToPool","playAmbientLoop","stopAmbientLoop","ambientSource","ambientVolume","play","to","start","call","stop","playUISound","uiSource","source","playing","lowestPriority","targetSource","enableSpatialAudio","screenCenter","x","y","distance","Math","sqrt","pow","maxDistance","volumeMultiplier","max","setSoundEffectVolume","min","getConfigForSource","setAmbientVolume","playBallBounce","playBrickDestroyed","playUIClick","playBossAppear","setAmbientForChapter","chapter","AMBIENT_FIRE","getDebugInfo","activeCount","Array","from","filter","s","ambientPlaying"],"mappings":"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","sourcesContent":["import { _decorator, Component, AudioSource, resources, AudioClip, tween, Node } from 'cc';\r\nimport { AudioManager } from '../managers/AudioManager';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport enum SoundEffectType {\r\n    // 基础UI音效\r\n    UI_CLICK = 'ui_click',\r\n    UI_HOVER = 'ui_hover', \r\n    UI_SUCCESS = 'ui_success',\r\n    UI_ERROR = 'ui_error',\r\n    UI_OPEN = 'ui_open',\r\n    UI_CLOSE = 'ui_close',\r\n    \r\n    // 游戏核心音效\r\n    BALL_BOUNCE_PADDLE = 'ball_bounce_paddle',\r\n    BALL_BOUNCE_WALL = 'ball_bounce_wall',\r\n    BALL_BOUNCE_BRICK = 'ball_bounce_brick',\r\n    BALL_LOST = 'ball_lost',\r\n    BALL_SPAWN = 'ball_spawn',\r\n    \r\n    // 砖块音效\r\n    BRICK_HIT = 'brick_hit',\r\n    BRICK_DESTROYED = 'brick_destroyed',\r\n    BRICK_SPECIAL_HIT = 'brick_special_hit',\r\n    BRICK_EXPLOSION = 'brick_explosion',\r\n    BRICK_ELECTRIC = 'brick_electric',\r\n    BRICK_ICE_BREAK = 'brick_ice_break',\r\n    BRICK_FIRE_BURN = 'brick_fire_burn',\r\n    \r\n    // 挡板音效\r\n    PADDLE_MOVE = 'paddle_move',\r\n    PADDLE_DAMAGED = 'paddle_damaged',\r\n    PADDLE_REPAIRED = 'paddle_repaired',\r\n    PADDLE_LEVEL_UP = 'paddle_level_up',\r\n    PADDLE_LASER_SHOOT = 'paddle_laser_shoot',\r\n    \r\n    // 核心音效\r\n    CORE_DAMAGED = 'core_damaged',\r\n    CORE_CRITICAL = 'core_critical',\r\n    CORE_HEALED = 'core_healed',\r\n    CORE_LEVEL_UP = 'core_level_up',\r\n    CORE_DESTROYED = 'core_destroyed',\r\n    \r\n    // 道具音效\r\n    POWERUP_SPAWN = 'powerup_spawn',\r\n    POWERUP_COLLECT = 'powerup_collect',\r\n    POWERUP_ACTIVATE = 'powerup_activate',\r\n    POWERUP_EXPIRE = 'powerup_expire',\r\n    \r\n    // 遗物音效\r\n    RELIC_FOUND = 'relic_found',\r\n    RELIC_ACTIVATE = 'relic_activate',\r\n    RELIC_PROC = 'relic_proc',\r\n    \r\n    // Boss音效\r\n    BOSS_APPEAR = 'boss_appear',\r\n    BOSS_ATTACK = 'boss_attack',\r\n    BOSS_DAMAGED = 'boss_damaged',\r\n    BOSS_PHASE_CHANGE = 'boss_phase_change',\r\n    BOSS_DEFEATED = 'boss_defeated',\r\n    \r\n    // 关卡音效\r\n    LEVEL_START = 'level_start',\r\n    LEVEL_COMPLETE = 'level_complete',\r\n    LEVEL_FAILED = 'level_failed',\r\n    CHAPTER_COMPLETE = 'chapter_complete',\r\n    \r\n    // 环境音效\r\n    AMBIENT_WIND = 'ambient_wind',\r\n    AMBIENT_SPARKS = 'ambient_sparks',\r\n    AMBIENT_WATER = 'ambient_water',\r\n    AMBIENT_FIRE = 'ambient_fire',\r\n    \r\n    // 商店和货币音效\r\n    COIN_COLLECT = 'coin_collect',\r\n    GEM_COLLECT = 'gem_collect',\r\n    PURCHASE_SUCCESS = 'purchase_success',\r\n    PURCHASE_FAILED = 'purchase_failed',\r\n    \r\n    // 成就和奖励音效\r\n    ACHIEVEMENT_UNLOCK = 'achievement_unlock',\r\n    REWARD_CLAIM = 'reward_claim',\r\n    EXP_GAIN = 'exp_gain',\r\n    LEVEL_UP = 'level_up'\r\n}\r\n\r\nexport interface SoundEffectConfig {\r\n    clipName: string;\r\n    volume: number;\r\n    pitch: number;\r\n    loop: boolean;\r\n    fadeIn: boolean;\r\n    fadeOut: boolean;\r\n    delay: number;\r\n    randomPitch: boolean;\r\n    spatialAudio: boolean;\r\n    priority: number;\r\n}\r\n\r\n@ccclass('LevelSoundManager')\r\nexport class LevelSoundManager extends Component {\r\n    \r\n    @property(AudioSource)\r\n    public soundEffectSource: AudioSource | null = null;\r\n    \r\n    @property(AudioSource) \r\n    public ambientSource: AudioSource | null = null;\r\n    \r\n    @property(AudioSource)\r\n    public uiSource: AudioSource | null = null;\r\n    \r\n    @property\r\n    public maxConcurrentSounds: number = 8;\r\n    \r\n    @property\r\n    public soundEffectVolume: number = 1.0;\r\n    \r\n    @property\r\n    public ambientVolume: number = 0.5;\r\n    \r\n    @property\r\n    public enableSpatialAudio: boolean = true;\r\n\r\n    private static _instance: LevelSoundManager | null = null;\r\n    private _soundPool: AudioSource[] = [];\r\n    private _activeSounds: Map<string, AudioSource> = new Map();\r\n    private _soundConfigs: Map<SoundEffectType, SoundEffectConfig> = new Map();\r\n    private _audioClips: Map<string, AudioClip> = new Map();\r\n    private _currentAmbientLoop: string = '';\r\n\r\n    public static getInstance(): LevelSoundManager | null {\r\n        return LevelSoundManager._instance;\r\n    }\r\n\r\n    protected onLoad(): void {\r\n        if (LevelSoundManager._instance === null) {\r\n            LevelSoundManager._instance = this;\r\n        }\r\n        \r\n        this.initializeSoundPool();\r\n        this.initializeSoundConfigs();\r\n        this.preloadAudioClips();\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        if (LevelSoundManager._instance === this) {\r\n            LevelSoundManager._instance = null;\r\n        }\r\n        \r\n        this.stopAllSounds();\r\n        this._audioClips.clear();\r\n        this._activeSounds.clear();\r\n    }\r\n\r\n    /**\r\n     * 初始化音效池\r\n     */\r\n    private initializeSoundPool(): void {\r\n        for (let i = 0; i < this.maxConcurrentSounds; i++) {\r\n            const audioNode = new Node(`SoundPool_${i}`);\r\n            const audioSource = audioNode.addComponent(AudioSource);\r\n            audioSource.volume = this.soundEffectVolume;\r\n            \r\n            this.node.addChild(audioNode);\r\n            this._soundPool.push(audioSource);\r\n        }\r\n        \r\n        console.log(`Sound pool initialized with ${this.maxConcurrentSounds} sources`);\r\n    }\r\n\r\n    /**\r\n     * 初始化音效配置\r\n     */\r\n    private initializeSoundConfigs(): void {\r\n        // UI音效配置\r\n        this._soundConfigs.set(SoundEffectType.UI_CLICK, {\r\n            clipName: 'ui/click',\r\n            volume: 0.8,\r\n            pitch: 1.0,\r\n            loop: false,\r\n            fadeIn: false,\r\n            fadeOut: false,\r\n            delay: 0,\r\n            randomPitch: false,\r\n            spatialAudio: false,\r\n            priority: 5\r\n        });\r\n\r\n        this._soundConfigs.set(SoundEffectType.UI_HOVER, {\r\n            clipName: 'ui/hover',\r\n            volume: 0.5,\r\n            pitch: 1.0,\r\n            loop: false,\r\n            fadeIn: false,\r\n            fadeOut: false,\r\n            delay: 0,\r\n            randomPitch: false,\r\n            spatialAudio: false,\r\n            priority: 3\r\n        });\r\n\r\n        // 弹球音效配置\r\n        this._soundConfigs.set(SoundEffectType.BALL_BOUNCE_PADDLE, {\r\n            clipName: 'gameplay/ball_bounce_paddle',\r\n            volume: 0.9,\r\n            pitch: 1.0,\r\n            loop: false,\r\n            fadeIn: false,\r\n            fadeOut: false,\r\n            delay: 0,\r\n            randomPitch: true,\r\n            spatialAudio: true,\r\n            priority: 8\r\n        });\r\n\r\n        this._soundConfigs.set(SoundEffectType.BALL_BOUNCE_BRICK, {\r\n            clipName: 'gameplay/ball_bounce_brick',\r\n            volume: 0.7,\r\n            pitch: 1.0,\r\n            loop: false,\r\n            fadeIn: false,\r\n            fadeOut: false,\r\n            delay: 0,\r\n            randomPitch: true,\r\n            spatialAudio: true,\r\n            priority: 7\r\n        });\r\n\r\n        this._soundConfigs.set(SoundEffectType.BALL_LOST, {\r\n            clipName: 'gameplay/ball_lost',\r\n            volume: 1.0,\r\n            pitch: 0.8,\r\n            loop: false,\r\n            fadeIn: false,\r\n            fadeOut: true,\r\n            delay: 0,\r\n            randomPitch: false,\r\n            spatialAudio: false,\r\n            priority: 9\r\n        });\r\n\r\n        // 砖块音效配置\r\n        this._soundConfigs.set(SoundEffectType.BRICK_HIT, {\r\n            clipName: 'gameplay/brick_hit',\r\n            volume: 0.6,\r\n            pitch: 1.0,\r\n            loop: false,\r\n            fadeIn: false,\r\n            fadeOut: false,\r\n            delay: 0,\r\n            randomPitch: true,\r\n            spatialAudio: true,\r\n            priority: 6\r\n        });\r\n\r\n        this._soundConfigs.set(SoundEffectType.BRICK_DESTROYED, {\r\n            clipName: 'gameplay/brick_destroyed',\r\n            volume: 0.8,\r\n            pitch: 1.0,\r\n            loop: false,\r\n            fadeIn: false,\r\n            fadeOut: false,\r\n            delay: 0,\r\n            randomPitch: true,\r\n            spatialAudio: true,\r\n            priority: 7\r\n        });\r\n\r\n        this._soundConfigs.set(SoundEffectType.BRICK_EXPLOSION, {\r\n            clipName: 'gameplay/brick_explosion',\r\n            volume: 1.0,\r\n            pitch: 1.0,\r\n            loop: false,\r\n            fadeIn: false,\r\n            fadeOut: false,\r\n            delay: 0,\r\n            randomPitch: false,\r\n            spatialAudio: true,\r\n            priority: 9\r\n        });\r\n\r\n        this._soundConfigs.set(SoundEffectType.BRICK_ELECTRIC, {\r\n            clipName: 'gameplay/brick_electric',\r\n            volume: 0.9,\r\n            pitch: 1.2,\r\n            loop: false,\r\n            fadeIn: false,\r\n            fadeOut: false,\r\n            delay: 0,\r\n            randomPitch: true,\r\n            spatialAudio: true,\r\n            priority: 8\r\n        });\r\n\r\n        // Boss音效配置\r\n        this._soundConfigs.set(SoundEffectType.BOSS_APPEAR, {\r\n            clipName: 'boss/boss_appear',\r\n            volume: 1.0,\r\n            pitch: 0.9,\r\n            loop: false,\r\n            fadeIn: true,\r\n            fadeOut: false,\r\n            delay: 0.5,\r\n            randomPitch: false,\r\n            spatialAudio: false,\r\n            priority: 10\r\n        });\r\n\r\n        this._soundConfigs.set(SoundEffectType.BOSS_DEFEATED, {\r\n            clipName: 'boss/boss_defeated',\r\n            volume: 1.0,\r\n            pitch: 1.0,\r\n            loop: false,\r\n            fadeIn: false,\r\n            fadeOut: true,\r\n            delay: 0,\r\n            randomPitch: false,\r\n            spatialAudio: false,\r\n            priority: 10\r\n        });\r\n\r\n        // 环境音效配置\r\n        this._soundConfigs.set(SoundEffectType.AMBIENT_WIND, {\r\n            clipName: 'ambient/wind_loop',\r\n            volume: 0.3,\r\n            pitch: 1.0,\r\n            loop: true,\r\n            fadeIn: true,\r\n            fadeOut: true,\r\n            delay: 0,\r\n            randomPitch: false,\r\n            spatialAudio: false,\r\n            priority: 2\r\n        });\r\n\r\n        this._soundConfigs.set(SoundEffectType.AMBIENT_SPARKS, {\r\n            clipName: 'ambient/sparks_loop',\r\n            volume: 0.4,\r\n            pitch: 1.0,\r\n            loop: true,\r\n            fadeIn: true,\r\n            fadeOut: true,\r\n            delay: 0,\r\n            randomPitch: false,\r\n            spatialAudio: false,\r\n            priority: 2\r\n        });\r\n\r\n        console.log(`Initialized ${this._soundConfigs.size} sound configurations`);\r\n    }\r\n\r\n    /**\r\n     * 预加载音频资源\r\n     */\r\n    private preloadAudioClips(): void {\r\n        const audioList = [\r\n            // UI音效\r\n            'ui/click', 'ui/hover', 'ui/success', 'ui/error', 'ui/open', 'ui/close',\r\n            \r\n            // 游戏核心音效\r\n            'gameplay/ball_bounce_paddle', 'gameplay/ball_bounce_wall', 'gameplay/ball_bounce_brick',\r\n            'gameplay/ball_lost', 'gameplay/ball_spawn',\r\n            \r\n            // 砖块音效\r\n            'gameplay/brick_hit', 'gameplay/brick_destroyed', 'gameplay/brick_explosion',\r\n            'gameplay/brick_electric', 'gameplay/brick_ice_break', 'gameplay/brick_fire_burn',\r\n            \r\n            // 挡板音效\r\n            'gameplay/paddle_move', 'gameplay/paddle_damaged', 'gameplay/paddle_repaired',\r\n            'gameplay/paddle_level_up', 'gameplay/paddle_laser_shoot',\r\n            \r\n            // Boss音效\r\n            'boss/boss_appear', 'boss/boss_attack', 'boss/boss_damaged',\r\n            'boss/boss_phase_change', 'boss/boss_defeated',\r\n            \r\n            // 环境音效\r\n            'ambient/wind_loop', 'ambient/sparks_loop', 'ambient/water_loop', 'ambient/fire_loop'\r\n        ];\r\n\r\n        let loadedCount = 0;\r\n        const totalCount = audioList.length;\r\n\r\n        audioList.forEach(clipPath => {\r\n            resources.load(`audio/${clipPath}`, AudioClip, (err, clip) => {\r\n                loadedCount++;\r\n                \r\n                if (err) {\r\n                    console.warn(`Failed to load audio clip: ${clipPath}`, err);\r\n                } else {\r\n                    this._audioClips.set(clipPath, clip);\r\n                    console.log(`Loaded audio clip: ${clipPath}`);\r\n                }\r\n\r\n                if (loadedCount === totalCount) {\r\n                    console.log(`All audio clips loaded (${this._audioClips.size}/${totalCount})`);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 播放音效\r\n     */\r\n    public playSoundEffect(effectType: SoundEffectType, position?: { x: number, y: number }): boolean {\r\n        const config = this._soundConfigs.get(effectType);\r\n        if (!config) {\r\n            console.warn(`Sound effect config not found: ${effectType}`);\r\n            return false;\r\n        }\r\n\r\n        const audioClip = this._audioClips.get(config.clipName);\r\n        if (!audioClip) {\r\n            console.warn(`Audio clip not found: ${config.clipName}`);\r\n            return false;\r\n        }\r\n\r\n        const audioSource = this.getAvailableAudioSource();\r\n        if (!audioSource) {\r\n            console.warn('No available audio source for sound effect');\r\n            return false;\r\n        }\r\n\r\n        this.setupAudioSource(audioSource, config, audioClip, position);\r\n        \r\n        if (config.delay > 0) {\r\n            this.scheduleOnce(() => {\r\n                this.playAudioSource(audioSource, config);\r\n            }, config.delay);\r\n        } else {\r\n            this.playAudioSource(audioSource, config);\r\n        }\r\n\r\n        // 记录活跃音效\r\n        const soundId = `${effectType}_${Date.now()}`;\r\n        this._activeSounds.set(soundId, audioSource);\r\n\r\n        // 设置音效结束回调\r\n        this.scheduleOnce(() => {\r\n            this._activeSounds.delete(soundId);\r\n            this.returnAudioSourceToPool(audioSource);\r\n        }, 5.0); // Default duration since audioClip.duration is not available\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 播放环境音效循环\r\n     */\r\n    public playAmbientLoop(effectType: SoundEffectType): boolean {\r\n        if (this._currentAmbientLoop === effectType) {\r\n            return true; // 已经在播放\r\n        }\r\n\r\n        // 停止当前环境音效\r\n        this.stopAmbientLoop();\r\n\r\n        const config = this._soundConfigs.get(effectType);\r\n        if (!config || !config.loop) {\r\n            console.warn(`Ambient sound config not found or not looped: ${effectType}`);\r\n            return false;\r\n        }\r\n\r\n        const audioClip = this._audioClips.get(config.clipName);\r\n        if (!audioClip || !this.ambientSource) {\r\n            console.warn(`Ambient audio clip or source not found: ${config.clipName}`);\r\n            return false;\r\n        }\r\n\r\n        this.ambientSource.clip = audioClip;\r\n        this.ambientSource.volume = config.volume * this.ambientVolume;\r\n        // AudioSource pitch property not available in Cocos Creator 3.x\r\n        // this.ambientSource.pitch = config.pitch;\r\n        this.ambientSource.loop = true;\r\n\r\n        if (config.fadeIn) {\r\n            this.ambientSource.volume = 0;\r\n            this.ambientSource.play();\r\n            \r\n            tween(this.ambientSource)\r\n                .to(2.0, { volume: config.volume * this.ambientVolume })\r\n                .start();\r\n        } else {\r\n            this.ambientSource.play();\r\n        }\r\n\r\n        this._currentAmbientLoop = effectType;\r\n        console.log(`Started ambient loop: ${effectType}`);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 停止环境音效循环\r\n     */\r\n    public stopAmbientLoop(): void {\r\n        if (!this.ambientSource || !this._currentAmbientLoop) {\r\n            return;\r\n        }\r\n\r\n        const config = this._soundConfigs.get(this._currentAmbientLoop as SoundEffectType);\r\n        \r\n        if (config && config.fadeOut) {\r\n            tween(this.ambientSource)\r\n                .to(1.0, { volume: 0 })\r\n                .call(() => {\r\n                    if (this.ambientSource) {\r\n                        this.ambientSource.stop();\r\n                    }\r\n                })\r\n                .start();\r\n        } else {\r\n            this.ambientSource.stop();\r\n        }\r\n\r\n        console.log(`Stopped ambient loop: ${this._currentAmbientLoop}`);\r\n        this._currentAmbientLoop = '';\r\n    }\r\n\r\n    /**\r\n     * 播放UI音效\r\n     */\r\n    public playUISound(effectType: SoundEffectType): boolean {\r\n        const config = this._soundConfigs.get(effectType);\r\n        if (!config) return false;\r\n\r\n        const audioClip = this._audioClips.get(config.clipName);\r\n        if (!audioClip || !this.uiSource) return false;\r\n\r\n        this.uiSource.clip = audioClip;\r\n        this.uiSource.volume = config.volume * this.soundEffectVolume;\r\n        // AudioSource pitch property not available in Cocos Creator 3.x\r\n        // this.uiSource.pitch = config.randomPitch ? \r\n        //     config.pitch + (Math.random() - 0.5) * 0.2 : \r\n        //     config.pitch;\r\n        this.uiSource.play();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 获取可用的音频源\r\n     */\r\n    private getAvailableAudioSource(): AudioSource | null {\r\n        // 查找空闲的音频源\r\n        for (const source of this._soundPool) {\r\n            if (!source.playing) {\r\n                return source;\r\n            }\r\n        }\r\n\r\n        // 如果没有空闲的，找到优先级最低的音频源\r\n        let lowestPriority = 10;\r\n        let targetSource: AudioSource | null = null;\r\n\r\n        for (const [soundId, source] of this._activeSounds) {\r\n            // 这里需要根据音效类型获取优先级\r\n            // 简化处理，直接使用第一个找到的\r\n            if (!targetSource) {\r\n                targetSource = source;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return targetSource || this._soundPool[0];\r\n    }\r\n\r\n    /**\r\n     * 设置音频源参数\r\n     */\r\n    private setupAudioSource(source: AudioSource, config: SoundEffectConfig, clip: AudioClip, position?: { x: number, y: number }): void {\r\n        source.clip = clip;\r\n        source.volume = config.volume * this.soundEffectVolume;\r\n        // AudioSource pitch property not available in Cocos Creator 3.x\r\n        // source.pitch = config.randomPitch ? \r\n        //     config.pitch + (Math.random() - 0.5) * 0.2 : \r\n        //     config.pitch;\r\n        source.loop = config.loop;\r\n\r\n        // 空间音频设置\r\n        if (config.spatialAudio && position && this.enableSpatialAudio) {\r\n            // 根据位置调整音量和声道\r\n            const screenCenter = { x: 0, y: 0 };\r\n            const distance = Math.sqrt(\r\n                Math.pow(position.x - screenCenter.x, 2) + \r\n                Math.pow(position.y - screenCenter.y, 2)\r\n            );\r\n            \r\n            // 距离衰减\r\n            const maxDistance = 500;\r\n            const volumeMultiplier = Math.max(0.1, 1.0 - (distance / maxDistance));\r\n            source.volume *= volumeMultiplier;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放音频源\r\n     */\r\n    private playAudioSource(source: AudioSource, config: SoundEffectConfig): void {\r\n        if (config.fadeIn) {\r\n            source.volume = 0;\r\n            source.play();\r\n            \r\n            tween(source)\r\n                .to(0.3, { volume: config.volume * this.soundEffectVolume })\r\n                .start();\r\n        } else {\r\n            source.play();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 归还音频源到池中\r\n     */\r\n    private returnAudioSourceToPool(source: AudioSource): void {\r\n        source.stop();\r\n        source.clip = null;\r\n        source.volume = this.soundEffectVolume;\r\n        // AudioSource pitch property not available in Cocos Creator 3.x\r\n        // source.pitch = 1.0;\r\n        source.loop = false;\r\n    }\r\n\r\n    /**\r\n     * 停止所有音效\r\n     */\r\n    public stopAllSounds(): void {\r\n        // 停止所有音效源\r\n        this._soundPool.forEach(source => {\r\n            source.stop();\r\n        });\r\n\r\n        // 停止环境音效\r\n        this.stopAmbientLoop();\r\n\r\n        // 停止UI音效\r\n        if (this.uiSource) {\r\n            this.uiSource.stop();\r\n        }\r\n\r\n        // 清除活跃音效记录\r\n        this._activeSounds.clear();\r\n\r\n        console.log('All sounds stopped');\r\n    }\r\n\r\n    /**\r\n     * 设置音量\r\n     */\r\n    public setSoundEffectVolume(volume: number): void {\r\n        this.soundEffectVolume = Math.max(0, Math.min(1, volume));\r\n        \r\n        // 更新所有活跃的音效源音量\r\n        this._soundPool.forEach(source => {\r\n            if (source.playing) {\r\n                const config = this.getConfigForSource(source);\r\n                if (config) {\r\n                    source.volume = config.volume * this.soundEffectVolume;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public setAmbientVolume(volume: number): void {\r\n        this.ambientVolume = Math.max(0, Math.min(1, volume));\r\n        \r\n        if (this.ambientSource && this.ambientSource.playing) {\r\n            const config = this._soundConfigs.get(this._currentAmbientLoop as SoundEffectType);\r\n            if (config) {\r\n                this.ambientSource.volume = config.volume * this.ambientVolume;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 工具方法\r\n     */\r\n    private getConfigForSource(source: AudioSource): SoundEffectConfig | null {\r\n        // 这里可以通过某种方式追踪音频源对应的配置\r\n        // 简化实现\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 快捷方法\r\n     */\r\n    public playBallBounce(position?: { x: number, y: number }): void {\r\n        this.playSoundEffect(SoundEffectType.BALL_BOUNCE_BRICK, position);\r\n    }\r\n\r\n    public playBrickDestroyed(position?: { x: number, y: number }): void {\r\n        this.playSoundEffect(SoundEffectType.BRICK_DESTROYED, position);\r\n    }\r\n\r\n    public playUIClick(): void {\r\n        this.playUISound(SoundEffectType.UI_CLICK);\r\n    }\r\n\r\n    public playBossAppear(): void {\r\n        this.playSoundEffect(SoundEffectType.BOSS_APPEAR);\r\n    }\r\n\r\n    public setAmbientForChapter(chapter: number): void {\r\n        switch (chapter) {\r\n            case 1:\r\n                this.playAmbientLoop(SoundEffectType.AMBIENT_WIND);\r\n                break;\r\n            case 2:\r\n                this.playAmbientLoop(SoundEffectType.AMBIENT_SPARKS);\r\n                break;\r\n            case 3:\r\n                this.playAmbientLoop(SoundEffectType.AMBIENT_FIRE);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 调试信息\r\n     */\r\n    public getDebugInfo(): string {\r\n        const activeCount = Array.from(this._soundPool).filter(s => s.playing).length;\r\n        const ambientPlaying = this.ambientSource?.playing ? this._currentAmbientLoop : 'None';\r\n        \r\n        return `Active Sounds: ${activeCount}/${this.maxConcurrentSounds}, Ambient: ${ambientPlaying}, Volume: ${this.soundEffectVolume}`;\r\n    }\r\n}"]}